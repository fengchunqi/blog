(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{604:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIPS")]),t._v(" "),a("p",[t._v("原文链接："),a("a",{attrs:{href:"https://juejin.cn/post/6956360277185003556",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("让我在面试官面前结巴的24个XX和XX的区别！"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"箭头函数和普通函数的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数和普通函数的区别"}},[t._v("#")]),t._v(" 箭头函数和普通函数的区别")]),t._v(" "),a("ul",[a("li",[t._v("箭头函数和普通函数的样式不同，箭头函数语法更加简洁、清晰，箭头函数是"),a("code",[t._v("=>")]),t._v("定义函数,普通函数是"),a("code",[t._v("function")]),t._v("定义函数。")]),t._v(" "),a("li",[t._v("箭头函数会捕获其所在上下文的"),a("code",[t._v("this")]),t._v("值，作为自己的"),a("code",[t._v("this")]),t._v("值，定义的时候就确定并固定了。")]),t._v(" "),a("li",[t._v("箭头函数不能作为构造函数使用，也不能使用"),a("code",[t._v("new")]),t._v("关键字(因为箭头函数没有自己的"),a("code",[t._v("this")]),t._v("，它的"),a("code",[t._v("this")]),t._v("其实是继承了外层执行环境中的"),a("code",[t._v("this")]),t._v("，且"),a("code",[t._v("this")]),t._v("指向永远不会改变,作为构造函数其的"),a("code",[t._v("this")]),t._v("要是指向创建的新对象)。")]),t._v(" "),a("li",[t._v("箭头函数没有自己的"),a("code",[t._v("arguments")]),t._v("。在箭头函数中访问"),a("code",[t._v("arguments")]),t._v("实际上获得的是外层局部（函数）执行环境中的值。")]),t._v(" "),a("li",[a("code",[t._v("call")]),t._v("、"),a("code",[t._v("apply")]),t._v("、"),a("code",[t._v("bind")]),t._v(" 并不会影响其"),a("code",[t._v("this")]),t._v("的指向。")]),t._v(" "),a("li",[t._v("箭头函数没有原型"),a("code",[t._v("prototype")]),t._v("。")]),t._v(" "),a("li",[t._v("箭头函数不能当作"),a("code",[t._v("Generator")]),t._v("函数，不能使用"),a("code",[t._v("yield")]),t._v("关键字。")])]),t._v(" "),a("h2",{attrs:{id:"var-let和const之间的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-let和const之间的区别"}},[t._v("#")]),t._v(" var,let和const之间的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("变量提升方面")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v("声明的变量存在变量提升，即变量可以在声明之前调用，值为"),a("code",[t._v("undefined")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("不存在变量提升问题(注意这个‘问题’后缀，其实是有提升的，只不过是"),a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("具有一个暂时性死区的概念，即没有到其赋值时，之前就不能用)，即它们所声明的变量一定要在声明后使用，否则报错。")])])]),t._v(" "),a("li",[a("p",[t._v("块级作用域方面")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v("不存在块级作用域")]),t._v(" "),a("li",[a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("存在块级作用域")])])]),t._v(" "),a("li",[a("p",[t._v("声明方面")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v("允许重复声明变量")]),t._v(" "),a("li",[a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("在同一作用域不允许重复声明变量。其中"),a("code",[t._v("const")]),t._v("声明一个只读的常量(因为如此，其声明时就一定要赋值，不然报错)。一旦声明，常量的值就不能改变。")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIPS")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("const")]),t._v("声明了一个对象obj，对象里的属性是可以改变的。")]),t._v(" "),a("p",[t._v("因为"),a("code",[t._v("const")]),t._v("声明的obj只是保存着其对象的引用地址，只要地址不变，就不会出错。")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("Object.freeze(obj)")]),t._v("冻结obj,就能使其内的属性不可变,但它有局限，就是obj对象中要是有属性是对象，该对象内属性还能改变，要全不可变，就需要使用递归等方式一层一层全部冻结。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("var：遇到有var的作用域，在任何语句执行前都已经完成了声明和初始化，也就是变量提升而且拿到undefined的原因由来")])]),t._v(" "),a("li",[a("p",[t._v("function：声明、初始化、赋值一开始就全部完成，所以函数的变量提升优先级更高")])]),t._v(" "),a("li",[a("p",[t._v("let：解析器进入一个块级作用域，发现let关键字，变量只是先完成声明，并没有到初始化那一步。此时如果在此作用域提前访问，则报错xx is not defined，这就是暂时性死区的由来。等到解析到有let那一行的时候，才会进入初始化阶段。如果let的那一行是赋值操作，则初始化和赋值同时进行。const、class都是同let一样的道理")])]),t._v(" "),a("li",[a("p",[t._v("var，会直接在栈内存里预分配内存空间，然后等到实际语句执行的时候，再存储对应的变量，如果传的是引用类型，那么会在堆内存里开辟一个内存空间存储实际内容，栈内存会存储一个指向堆内存的指针")])]),t._v(" "),a("li",[a("p",[t._v("let，是不会在栈内存里预分配内存空间，而且在栈内存分配变量时，做一个检查，如果已经有相同变量名存在就会报错")])]),t._v(" "),a("li",[a("p",[t._v("const，也不会预分配内存空间，在栈内存分配变量时也会做同样的检查。不过const存储的变量是不可修改的，对于基本类型来说你无法修改定义的值，对于引用类型来说你无法修改栈内存里分配的指针，但是你可以修改指针指向的对象里面的属性")])])])]),t._v(" "),a("h2",{attrs:{id:"bigint和number的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bigint和number的区别"}},[t._v("#")]),t._v(" Bigint和Number的区别")]),t._v(" "),a("p",[a("code",[t._v("Number")]),t._v("类型的数字有精度限制，数值的精度只能到 53 个二进制位（相当于 16 个十进制位, 正负"),a("code",[t._v("9007199254740992")]),t._v("），大于这个范围的整数，就无法精确表示了。")]),t._v(" "),a("p",[a("code",[t._v("Bigint")]),t._v("没有位数的限制，任何位数的整数都可以精确表示。但是其只能用于表示整数，且为了与"),a("code",[t._v("Number")]),t._v("进行区分，"),a("code",[t._v("BigInt")]),t._v(" 类型的数据必须添加后缀n。"),a("code",[t._v("BigInt")]),t._v(" 可以使用负号（-），但是不能使用正号（+）。")]),t._v(" "),a("p",[t._v("另外"),a("code",[t._v("Number")]),t._v("类型的数字和"),a("code",[t._v("Bigint")]),t._v("类型的数字不能混合计算。")]),t._v(" "),a("p",[a("code",[t._v("12n+12; //报错")])]),t._v(" "),a("h2",{attrs:{id:"基本数据类型和引用数据类型的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型和引用数据类型的区别"}},[t._v("#")]),t._v(" 基本数据类型和引用数据类型的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本数据类型")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型的值是不可变的,这里你就可以联想到，"),a("strong",[t._v("是不是所有关于字符串和数字的方法都是带有返回值的，而不是改变原字符串或数字")]),t._v("。")]),t._v(" "),a("li",[t._v("基本数据类型不可以添加属性和方法，虽然不会报错，但也只是一瞬间转为了相应包装对象，操作完又转化回原基本数据类型，不会保存结果。")]),t._v(" "),a("li",[t._v("基本数据类型的赋值是简单赋值,基本数据类型的比较是值的比较。")]),t._v(" "),a("li",[t._v("基本数据类型是存放在栈区的")])])]),t._v(" "),a("li",[a("p",[t._v("引用数据类型")]),t._v(" "),a("ul",[a("li",[t._v("引用类型的值是可以改变的,例如对象就可以通过修改对象属性值更改对象。")]),t._v(" "),a("li",[t._v("引用类型可以添加属性和方法。")]),t._v(" "),a("li",[t._v("引用类型的赋值是对象引用,即声明的变量标识符，存储的只是对象的指针地址。")]),t._v(" "),a("li",[t._v("引用类型的比较是引用(指针地址)的比较。")]),t._v(" "),a("li",[t._v("引用类型是同时保存在栈区和堆区中的,栈区保存变量标识符和指向堆内存的地址。")])])])]),t._v(" "),a("h2",{attrs:{id:"defer和async的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defer和async的区别"}},[t._v("#")]),t._v(" defer和async的区别")]),t._v(" "),a("p",[t._v("大家应该都知道在"),a("code",[t._v("script")]),t._v("标签内有这两个属性"),a("code",[t._v("async")]),t._v("和"),a("code",[t._v("defer")]),t._v("，例如")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),t._v(" src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx.js"')]),t._v(" async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"async"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),t._v(" src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx.js"')]),t._v(" defer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"defer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("defer：用于开启新的线程下载脚本文件，并使脚本在文档解析完成后执行。")]),t._v(" "),a("li",[t._v("async：HTML5新增属性，用于异步下载脚本文件，下载完毕立即解释执行代码。")])]),t._v(" "),a("p",[a("code",[t._v("defer")]),t._v("：中文意思是延迟。用途是表示脚本会被延迟到"),a("strong",[t._v("整个页面都解析完毕后")]),t._v("再运行。因此，在"),a("code",[t._v("<script>")]),t._v("元素中设置"),a("code",[t._v("defer")]),t._v("属性，相当于告诉浏览器立即下载，但延迟执行。")]),t._v(" "),a("p",[a("code",[t._v("HTML5")]),t._v("规范要求脚本按照它们出现的先后顺序执行，因此第一个延迟脚本会先于第二个延迟脚本执行,但执行脚本之间存在依赖，需要有执行的先后顺序时，就可以使用"),a("code",[t._v("defer")]),t._v(",延迟执行。我觉得把"),a("code",[t._v("script")]),t._v("脚本放在"),a("code",[t._v("body")]),t._v("底部和"),a("code",[t._v("defer")]),t._v("差不多。")]),t._v(" "),a("p",[a("code",[t._v("async")]),t._v("：中文意思是异步，这个属性与"),a("code",[t._v("defer")]),t._v("类似，都用于改变处理脚本的行为。同样与"),a("code",[t._v("defer")]),t._v("类似，"),a("code",[t._v("async")]),t._v("只适用于外部脚本文件，并告诉浏览器立即下载文件。但与"),a("code",[t._v("defer")]),t._v("不同的是，标记为"),a("code",[t._v("async")]),t._v("的脚本并不保证按照它们的先后顺序执行。")]),t._v(" "),a("p",[t._v("指定"),a("code",[t._v("async")]),t._v("属性的目的是不让页面等待两个脚本下载和执行，从而异步加载页面其他内容,这使用于之间互不依赖的各脚本。")]),t._v(" "),a("p",[t._v("看到这里，就能知道其的一些作用了")]),t._v(" "),a("p",[t._v("当网页交给浏览器的"),a("code",[t._v("HTML")]),t._v("解析器转变成一系列的词语（"),a("code",[t._v("Token")]),t._v("）。解释器根据词语构建节点（"),a("code",[t._v("Node")]),t._v("），形成"),a("code",[t._v("DOM")]),t._v("树。因为"),a("code",[t._v("JavaScript")]),t._v("代码可能会修改"),a("code",[t._v("DOM")]),t._v("树的结构，所以节点是"),a("code",[t._v("JavaScript")]),t._v("代码的话，就需要停止当前"),a("code",[t._v("DOM")]),t._v("树的创建，直到"),a("code",[t._v("JavaScript")]),t._v("的资源加载并被"),a("code",[t._v("JavaScript")]),t._v("引擎执行后才继续"),a("code",[t._v("DOM")]),t._v("树的创建。")]),t._v(" "),a("p",[t._v("这里就会产生阻塞，出现白屏问题(白屏问题优化有很多方面，这里就脚本阻塞这一小点)，我们就可以使用"),a("code",[t._v("async")]),t._v("和"),a("code",[t._v("defer")]),t._v("属性来解决"),a("code",[t._v("JavaScript")]),t._v("脚本阻塞问题。")]),t._v(" "),a("p",[t._v("当然最稳妥的办法还是把"),a("code",[t._v("script")]),t._v("标签放置在"),a("code",[t._v("body")]),t._v("的底部，没有兼容性问题，不会因此产生白屏问题，没有执行顺序问题。")]),t._v(" "),a("h2",{attrs:{id:"async-await对比promise的优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await对比promise的优缺点"}},[t._v("#")]),t._v(" async,await对比promise的优缺点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("async/await优点：")]),t._v(" "),a("ul",[a("li",[t._v("它做到了真正的串行的同步写法，代码阅读相对容易")]),t._v(" "),a("li",[t._v("对于条件语句和其他流程语句比较友好，可以直接写到判断条件里面")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yes, it is!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会打印")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("ul",[a("li",[t._v("处理复杂流程时，在代码清晰度方面有优势")])])]),t._v(" "),a("li",[a("p",[t._v("async/await缺点：")]),t._v(" "),a("ul",[a("li",[t._v("无法处理"),a("code",[t._v("promise")]),t._v("返回的"),a("code",[t._v("reject")]),t._v("对象，要借助"),a("code",[t._v("try/catch")])]),t._v(" "),a("li",[t._v("用"),a("code",[t._v("await")]),t._v("可能会导致性能问题，因为"),a("code",[t._v("await")]),t._v("会阻塞代码，也许之后的异步代码并不依赖于前者，但仍然需要等待前者完成，导致代码失去了并发性。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// promise")]),t._v("\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("try/catch")]),t._v("内部的变量无法传递给下一个"),a("code",[t._v("try/catch")]),t._v(","),a("code",[t._v("Promise")]),t._v("和"),a("code",[t._v("then/catch")]),t._v("内部定义的变量，能通过"),a("code",[t._v("then")]),t._v("链条的参数传递到下一个"),a("code",[t._v("then/catch")]),t._v("，但是"),a("code",[t._v("async/await")]),t._v("的"),a("code",[t._v("try")]),t._v("内部的变量，如果用"),a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("定义则无法传递到下一个"),a("code",[t._v("try/catch")]),t._v("，只能在外层作用域先定义好。")])]),t._v(" "),a("p",[t._v("但"),a("code",[t._v("async/await")]),t._v("确确实实是解决了"),a("code",[t._v("promise")]),t._v("一些问题的。更加灵活的处理异步")])]),t._v(" "),a("li",[a("p",[t._v("promise的一些问题：")]),t._v(" "),a("ul",[a("li",[t._v("一旦执行，无法中途取消，链式调用多个"),a("code",[t._v("then")]),t._v("中间不能随便跳出来")]),t._v(" "),a("li",[t._v("错误无法在外部被捕捉到，只能在内部进行预判处理，如果不设置回调函数，"),a("code",[t._v("Promise")]),t._v("内部抛出的错误，不会反应到外部")]),t._v(" "),a("li",[a("code",[t._v("Promise")]),t._v("内部如何执行，监测起来很难，当处于"),a("code",[t._v("pending")]),t._v("状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）")])])])]),t._v(" "),a("h2",{attrs:{id:"get和post的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get和post的区别"}},[t._v("#")]),t._v(" GET和POST的区别")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("GET")]),t._v(" 是将参数写在 URL 中 "),a("code",[t._v("?")]),t._v(" 的后面，并用 "),a("code",[t._v("&")]),t._v(" 分隔不同参数；而 "),a("code",[t._v("POST")]),t._v(" 是将信息存放在 "),a("code",[t._v("Message Body")]),t._v(" 中传送，参数‘不会’显示在 URL 中(Restful规范中是这样，但"),a("code",[t._v("POST")]),t._v("在有需要时可以把参数放URL里)。"),a("code",[t._v("GET")]),t._v("方式需要使用"),a("code",[t._v("Request.QueryString")]),t._v("来取得变量的值，而"),a("code",[t._v("POST")]),t._v("方式通过"),a("code",[t._v("Request.Form")]),t._v("来获取变量的值。也就是说"),a("code",[t._v("GET")]),t._v("是通过地址栏来传值，而"),a("code",[t._v("POST")]),t._v("是通过提交表单来传值。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("GET")]),t._v("请求提交的数据有长度限制（HTTP 协议本身没有限制 URL 及正文长度,对 URL 的限制大多是浏览器和服务器的原因），"),a("code",[t._v("POST")]),t._v("请求没有内容长度限制。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("GET")]),t._v("请求返回的内容会被浏览器缓存起来。而每次提交"),a("code",[t._v("POST")]),t._v("请求，浏览器不会缓存"),a("code",[t._v("POST")]),t._v("请求返回的内容。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("GET")]),t._v("对数据进行查询，"),a("code",[t._v("POST")]),t._v("主要对数据进行增删改！简单说，"),a("code",[t._v("GET")]),t._v("是只读，"),a("code",[t._v("POST")]),t._v("是写。")])]),t._v(" "),a("li",[a("p",[t._v("关于安全性，"),a("code",[t._v("GET")]),t._v(" 请求方式从浏览器的 URL 地址就可以看到参数；所以"),a("code",[t._v("POST")]),t._v("更安全，其实无论是 "),a("code",[t._v("GET")]),t._v(" 还是 "),a("code",[t._v("POST")]),t._v(" 其实都是不安全的，因为 HTTP 协议是明文传输，只要拦截封包便能轻易获取重要资讯。想要安全传输资料，必须使用"),a("code",[t._v("SSL/TLS")]),t._v("来加密封包，也就是 HTTPS。")]),t._v(" "),a("p",[t._v("那为什么推崇使用"),a("code",[t._v("POST")]),t._v("来处理敏感数据呢？")]),t._v(" "),a("p",[t._v("因为"),a("code",[t._v("GET")]),t._v("的记录会保存在浏览器，上网日志中，而使用"),a("code",[t._v("POST")]),t._v("，因为数据不会记录存储在浏览器的记录和网址访问记录中，这样会有更大的安全性。")])]),t._v(" "),a("li",[a("p",[t._v("一个误区 说"),a("code",[t._v("GET")]),t._v("产生一个TCP数据包；"),a("code",[t._v("POST")]),t._v("产生两个TCP数据包")]),t._v(" "),a("p",[t._v("其说法：对于"),a("code",[t._v("GET")]),t._v("方式的请求，浏览器会把http header和data一并发送出去，服务端响应200，请求成功。")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("POST")]),t._v("方式的请求，浏览器会先发送http header给服务端，告诉服务端等一下会有数据过来，服务端响应100 continue，告诉浏览器我已经准备接收数据，浏览器再"),a("code",[t._v("POST")]),t._v("发送一个data给服务端，服务端响应200，请求成功。")]),t._v(" "),a("p",[t._v("为其正名:上面所说的"),a("code",[t._v("POST")]),t._v("会比"),a("code",[t._v("GET")]),t._v("多一个TCP包其实不太严谨。多发的那个"),a("code",[t._v("expect 100 continue header")]),t._v("报文，是由客户端对http的"),a("code",[t._v("POST")]),t._v("和"),a("code",[t._v("GET")]),t._v("的请求策略决定的，目的是为了避免浪费资源，如带宽，数据传输消耗的时间等等。所以客户端会在发送header的时候添加expect 100去探探路，如果失败了就不用继续发送data，从而减少了资源的浪费。所以是否再发送一个包取决了客户端的实现策略，和"),a("code",[t._v("GET")]),t._v("/"),a("code",[t._v("POST")]),t._v("并没什么关系。有的客户端比如fireFox就只发送一个包。")])])]),t._v(" "),a("p",[t._v("扩展问题")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("请问"),a("code",[t._v("GET")]),t._v("请求能把参数传到body里面吗？")]),t._v(" "),a("p",[t._v("答案是可以的。HTTP协议里说的是，"),a("code",[t._v("GET")]),t._v("是从服务器取回数据，"),a("code",[t._v("POST")]),t._v("是发送数据，HTTP请求有header，有body。但是实现怎么样，协议就不管了。HTTPClient，curl，postman，浏览器等这些都是实现，实现上并不保证能传输、接收"),a("code",[t._v("GET")]),t._v("的body数据。")]),t._v(" "),a("p",[t._v("然而协议里确实说了哪些方法带body是没有意义并可能会产生问题，所以你硬给"),a("code",[t._v("GET")]),t._v("加一个body也是属于不遵循规范的，尽管可能成功但是后果自担。所以说"),a("code",[t._v("GET")]),t._v("不能带body是正确的说法。由于HTTP/1.1是基于文本的协议，所以头后空一行后的数据都是body，所以协议本身未作限制，但是有一个语义上的建议--不应在"),a("code",[t._v("GET")]),t._v("请求中放body。")]),t._v(" "),a("p",[t._v("如果你尝试利用缓存，你可能会遇到问题。代理不会在"),a("code",[t._v("GET")]),t._v("正文中查看参数是否对响应产生影响。但是也可以使用ETag/Last-Modified头字段来辅助处理缓存。")]),t._v(" "),a("blockquote",[a("p",[t._v("The GET method means retrieve whatever information (in the form of an entity) is identified by the Request-URI.\nGET方法意味着检索由请求URI标识的任何信息（以实体的形式）。")])])]),t._v(" "),a("li",[a("p",[t._v("在浏览器里如何让"),a("code",[t._v("GET")]),t._v("请求携带body呢？")]),t._v(" "),a("p",[t._v("不行。从协议方面来说，"),a("code",[t._v("GET")]),t._v("是可以带body的，但是不赞成这么做，所以好多工具并没有去提供支持，例如postman选择"),a("code",[t._v("GET")]),t._v("请求时body选项禁用（新版本已经支持了）。基本上也不要用"),a("code",[t._v("GET")]),t._v("来携带body数据。XMLHttpRequest内部就把body给移除了，也就意味着ajax没戏。可以使用的好像有curl或者后端的某些请求。")])])]),t._v(" "),a("h2",{attrs:{id:"用框架和不用框架的区别-vue和react的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用框架和不用框架的区别-vue和react的区别"}},[t._v("#")]),t._v(" 用框架和不用框架的区别,vue和react的区别")]),t._v(" "),a("p",[t._v("首先说说用框架和不用框架的区别：（以使用框架的角度看）")]),t._v(" "),a("p",[t._v("框架好处：")]),t._v(" "),a("ul",[a("li",[t._v("使用框架工具写项目，在浏览器中代码依然是原生的HTML CSS JS。而框架帮开发者做了很多事情，开发者只关注业务逻辑就可以,极大的加快了开发速度。例如前端框架根本上是解决了UI 与状态同步问题,频繁操作 DOM 性能低下,中间步骤过多,易产生 bug且不易维护,而且心智要求较高不利于开发效率的一系列阻碍")]),t._v(" "),a("li",[t._v("组件化: 其中以 "),a("code",[t._v("React")]),t._v(" 的组件化最为彻底,甚至可以到函数级别的原子组件,高度的组件化可以是我们的工程易于维护、易于组合拓展。")]),t._v(" "),a("li",[t._v("天然分层: "),a("code",[t._v("JQuery")]),t._v(" 时代的代码大部分情况下是面条代码,耦合严重,现代框架不管是 MVC、MVP还是MVVM 模式都能帮助我们进行分层，代码解耦更易于读写。")]),t._v(" "),a("li",[t._v("生态: 现在主流前端框架都自带生态,不管是数据流管理架构还是 UI 库都有成熟的解决方案")])]),t._v(" "),a("p",[t._v("框架缺点：")]),t._v(" "),a("ul",[a("li",[t._v("代码臃肿，使用者使用框架的时候会将整个框架引入，而框架封装了很多功能和组件，使用者必须按照它的规则使用，而实际开发中很多功能和组件是用不到的。")]),t._v(" "),a("li",[t._v("框架迭代更新速度非常快，需要时间熟悉它。")])]),t._v(" "),a("p",[t._v("说说Vue和React的区别：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("React")]),t._v("整体是函数式的思想，把组件设计成纯组件，状态和逻辑通过参数传入，所以在"),a("code",[t._v("React")]),t._v("中，是单向数据流；")]),t._v(" "),a("li",[a("code",[t._v("Vue")]),t._v("的思想是响应式的，也就是基于是数据可变的，通过对每一个属性建立"),a("code",[t._v("Watcher")]),t._v("来监听，当属性变化的时候，响应式的更新对应的虚拟dom。")])]),t._v(" "),a("h2",{attrs:{id:"cookies和session的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookies和session的区别"}},[t._v("#")]),t._v(" cookies和session的区别")]),t._v(" "),a("ul",[a("li",[t._v("存储位置不同:cookie的数据信息存放在客户端浏览器上，session的数据信息存放在服务器上。")]),t._v(" "),a("li",[t._v("存储容量不同:单个cookie保存的数据<=4KB，一个站点最多保存20个Cookie，而对于session来说并没有上限，但出于对服务器端的性能考虑，session内不要存放过多的东西，并且设置session删除机制。")]),t._v(" "),a("li",[t._v("存储方式不同:cookie中只能保管ASCII字符串，并需要通过编码方式存储为Unicode字符或者二进制数据。session中能够存储任何类型的数据，包括且不限于string，integer，list，map等。")]),t._v(" "),a("li",[t._v("隐私策略不同:cookie对客户端是可见的，别有用心的人可以分析存放在本地的cookie并进行cookie欺骗，所以它是不安全的，而session存储在服务器上，对客户端是透明的，不存在敏感信息泄漏的风险。")]),t._v(" "),a("li",[t._v("有效期上不同:开发可以通过设置cookie的属性，达到使cookie长期有效的效果。session依赖于名为"),a("code",[t._v("JSESSIONID")]),t._v("的cookie，而cookie "),a("code",[t._v("JSESSIONID")]),t._v("的过期时间默认为-1，只需关闭窗口该session就会失效，因而session不能达到长期有效的效果。")]),t._v(" "),a("li",[t._v("服务器压力不同:cookie保管在客户端，不占用服务器资源。对于并发用户十分多的网站，cookie是很好的选择。session是保管在服务器端的，每个用户都会产生一个session。假如并发访问的用户十分多，会产生十分多的session，耗费大量的内存。")]),t._v(" "),a("li",[t._v("跨域支持上不同:cookie支持跨域名访问。session不支持跨域名访问。")])]),t._v(" "),a("h2",{attrs:{id:"宏任务和微任务有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务和微任务有什么区别"}},[t._v("#")]),t._v(" 宏任务和微任务有什么区别")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/pages/articles/javascript/JavaScript中事件循环.html"}},[t._v("JavaScript中事件循环")])],1),t._v(" "),a("h2",{attrs:{id:"fetch-ajax-axios区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch-ajax-axios区别"}},[t._v("#")]),t._v(" fetch,Ajax,axios区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Ajax是什么：Ajax是（Asynchronous JavaScript and XML）的缩写。现在，允许浏览器与服务器通信而无须刷新当前页面的技术都被叫做Ajax。核心使用"),a("code",[t._v("XMLHttpRequest")]),t._v("对象。")])]),t._v(" "),a("li",[a("p",[t._v("axios是什么：axios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 客户端，本质上也是对原生XHR的封装，只不过它是Promise的实现版本，符合最新的ES规范。")])]),t._v(" "),a("li",[a("p",[t._v("fetch是什么：Fetch被称为下一代Ajax技术,采用Promise方式来处理数据。是一种简洁明了的API，比"),a("code",[t._v("XMLHttpRequest")]),t._v("更加简单易用。fetch不是ajax的进一步封装，而是原生js，没有使用"),a("code",[t._v("XMLHttpRequest")]),t._v("对象。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("语法简洁，更加语义化")])]),t._v(" "),a("li",[a("p",[t._v("基于标准 Promise 实现，支持 async/await")])]),t._v(" "),a("li",[a("p",[t._v("同构方便，使用 "),a("a",{attrs:{href:"https://github.com/matthew-andrews/isomorphic-fetch",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("isomorphic-fetch"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("更加底层，提供的API丰富（request, response）")])]),t._v(" "),a("li",[a("p",[t._v("脱离了XHR，是ES规范里新的实现方式")])]),t._v(" "),a("li",[a("p",[t._v("fetch只对网络请求报错，对400，500都当做成功的请求，服务器返回 400，500 错误码时并不会 reject，只有网络错误这些导致请求不能完成时，fetch 才会被 reject。")])]),t._v(" "),a("li",[a("p",[t._v("fetch默认不会带cookie，需要添加配置项： fetch(url, {credentials: 'include'})")])]),t._v(" "),a("li",[a("p",[t._v("fetch不支持abort，不支持超时控制，使用setTimeout及Promise.reject的实现的超时控制并不能阻止请求过程继续在后台运行，造成了流量的浪费")])]),t._v(" "),a("li",[a("p",[t._v("fetch没有办法原生监测请求的进度，而XHR可以")])])])])]),t._v(" "),a("p",[t._v("主要区别是 axios、fetch请求后都支持Promise对象API，ajax只能用回调函数。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// axios")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("axios")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  method"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/12345'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    firstName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Fred'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    lastName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Flintstone'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fetch")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" response "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Oops, error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("h2",{attrs:{id:"tcp和udp的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp和udp的区别"}},[t._v("#")]),t._v(" TCP和UDP的区别")]),t._v(" "),a("ul",[a("li",[t._v("TCP 是面向连接的，UDP 是无连接的即发送数据前不需要先建立链接。")]),t._v(" "),a("li",[t._v("TCP 提供可靠的服务。也就是说，通过 TCP 连接传送的数据，无差错，不丢失，不重复，且按序到达; UDP 尽最大努力交付，即不保证可靠交付。并且因为 TCP 可靠， 面向连接，不会丢失数据因此适合大数据量的交换。")]),t._v(" "),a("li",[t._v("TCP 是面向字节流，UDP 面向报文，并且网络出现拥塞不会使得发送速率降低（因此会出现丢包，对实时的应用比如 IP 电话和视频会议等）。")]),t._v(" "),a("li",[t._v("TCP 只能是 1 对 1 的，而UDP 支持 1 对 1,1 对多。")]),t._v(" "),a("li",[t._v("TCP 的首部较大为 20 字节，而 UDP 只有 8 字节。")]),t._v(" "),a("li",[t._v("TCP 是面向连接的可靠性传输，而 UDP 是不可靠的。")])]),t._v(" "),a("h2",{attrs:{id:"js中的堆和栈-栈和队列有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中的堆和栈-栈和队列有什么区别"}},[t._v("#")]),t._v(" js中的堆和栈,栈和队列有什么区别")]),t._v(" "),a("p",[t._v("堆(heap)和栈(stack)的区别:")]),t._v(" "),a("ul",[a("li",[t._v("堆：队列优先,先进先出；由操作系统自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。")]),t._v(" "),a("li",[t._v("栈：先进后出；动态分配的空间 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表。")])]),t._v(" "),a("p",[t._v("栈和队列的区别：")]),t._v(" "),a("ul",[a("li",[t._v("栈只允许在表尾一端进行插入和删除，队列只允许在表尾一端进行插入，在表头一端进行删除。")]),t._v(" "),a("li",[t._v("栈是先进后出，队列是先进先出。")])]),t._v(" "),a("h2",{attrs:{id:"websocket和http有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket和http有什么区别"}},[t._v("#")]),t._v(" WebSocket和HTTP有什么区别")]),t._v(" "),a("p",[t._v("相同点")]),t._v(" "),a("ul",[a("li",[t._v("都是一样基于TCP的，都是可靠性传输协议。")]),t._v(" "),a("li",[t._v("都是应用层协议。")])]),t._v(" "),a("p",[t._v("不同点")]),t._v(" "),a("ul",[a("li",[t._v("WebSocket是双向通信协议，模拟Socket协议，可以双向发送或接受信息。HTTP是单向的。")]),t._v(" "),a("li",[t._v("WebSocket是需要握手进行建立连接的。")])]),t._v(" "),a("h2",{attrs:{id:"http和https的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http和https的区别"}},[t._v("#")]),t._v(" HTTP和HTTPS的区别")]),t._v(" "),a("ul",[a("li",[t._v("HTTP明文传输，数据都是未加密的，安全性较差，HTTPS（SSL+HTTP）数据传输过程是加密的，安全性较好。")]),t._v(" "),a("li",[t._v("使用HTTPS协议需要到CA（Certificate Authority，数字证书认证机构）申请证书，一般免费证书较少，因而需要一定费用。")]),t._v(" "),a("li",[t._v("HTTP页面响应速度比HTTPS快，主要是因为HTTP使用TCP三次握手建立连接，客户端和服务器需要交换3个包，而HTTPS除了TCP的三个包，还要加上SSL握手需要的9个包，所以一共是12个包。")]),t._v(" "),a("li",[t._v("HTTP和HTTPS使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。")]),t._v(" "),a("li",[t._v("HTTPS其实就是建构在SSL/TLS之上的HTTP协议，所以，要比较HTTPS比HTTP要更耗费服务器资源。")])]),t._v(" "),a("h2",{attrs:{id:"px-em-rem-vw-vh区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#px-em-rem-vw-vh区别"}},[t._v("#")]),t._v(" px,em,rem,vw,vh区别")]),t._v(" "),a("ul",[a("li",[t._v("px: px就是pixel的缩写，意为像素。px就是一张图片最小的一个点，一张位图就是千千万万的这样的点构成的。")]),t._v(" "),a("li",[t._v("em: 参考物是"),a("strong",[t._v("父元素")]),t._v("的font-size，具有继承的特点。如果"),a("strong",[t._v("自身定义了font-size按自身来计算")]),t._v("（浏览器默认字体是16px），整个页面内1em不是一个固定的值。")]),t._v(" "),a("li",[t._v("rem: css3新单位，相对于**根元素html（网页）**的font-size，不会像em那样，依赖于父元素的字体大小，而造成混乱。")]),t._v(" "),a("li",[t._v("vw: css3新单位，viewpoint width的缩写，视窗宽度，1vw等于视窗宽度的1%。")]),t._v(" "),a("li",[t._v("vh: css3新单位，viewpoint height的缩写，视窗高度，1vh等于视窗高度的1%。")])]),t._v(" "),a("h2",{attrs:{id:"bind-call-apply区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bind-call-apply区别"}},[t._v("#")]),t._v(" bind,call,apply区别")]),t._v(" "),a("ul",[a("li",[t._v("三者都可以改变函数的this对象指向。")]),t._v(" "),a("li",[t._v("三者第一个参数都是this要指向的对象，如果如果没有这个参数或参数为undefined或null，则默认指向全局window(node端指向global)。")]),t._v(" "),a("li",[t._v("三者都可以传参，但是apply是数组，而call是参数列表，且apply和call是一次性传入参数，而bind可以分为多次传入。")]),t._v(" "),a("li",[t._v("bind改变this指向后不会立即执行，而是返回一个永久改变this指向的函数便于稍后调用；apply, call则是立即调用")])]),t._v(" "),a("h2",{attrs:{id:"caller和callee的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#caller和callee的区别"}},[t._v("#")]),t._v(" caller和callee的区别")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Function.caller")])]),t._v(" "),a("blockquote",[a("p",[t._v("非标准: 该特性是非标准的，请尽量不要在生产环境中使用它！")])]),t._v(" "),a("p",[t._v("返回调用指定函数的函数。如果一个函数"),a("code",[t._v("f")]),t._v("是在全局作用域内被调用的，则"),a("code",[t._v("f.caller")]),t._v("为"),a("code",[t._v("null")]),t._v("，相反，如果一个函数是在另外一个函数作用域内被调用的，则"),a("code",[t._v("f.caller")]),t._v("指向调用它的那个函数。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callerDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callerDemo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("caller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callerDemo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("caller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is a top function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCaller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callerDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCaller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "function handleCaller() { callerDemo();}"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callerDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this is a top function")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("arguments.callee")])]),t._v(" "),a("p",[a("code",[t._v("callee")]),t._v("是"),a("code",[t._v("arguments")]),t._v("对象的一个属性。它可以用于引用该函数的函数体内当前正在执行的函数。这在函数的名称是未知时很有用，例如在没有名称的函数表达式(也称为“匿名函数”)内。")]),t._v(" "),a("blockquote",[a("p",[t._v("警告：在严格模式下，第5版 ECMAScript (ES5) 禁止使用 arguments.callee()。当一个函数必须调用自身的时候, 避免使用 arguments.callee(), 通过要么给函数表达式一个名字,要么使用一个函数声明.")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calleeDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calleeDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 function calleeDemo() {console.log(arguments.callee);}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"_301和302有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_301和302有什么区别"}},[t._v("#")]),t._v(" 301和302有什么区别")]),t._v(" "),a("ul",[a("li",[t._v("301 Moved Permanently: 被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应 当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。")]),t._v(" "),a("li",[t._v("302 Found: 请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在 Cache-Control 或 Expires 中进行了指定的情况下，这个响应才是可缓存的。")])]),t._v(" "),a("p",[t._v("字面上的区别就是 301 是永久重定向，而 302 是临时重定向。")]),t._v(" "),a("p",[t._v("301 比较常用的场景是使用域名跳转。302 用来做临时跳转, 比如未登陆的用户访问用户中心被重定向到登录页面")]),t._v(" "),a("h2",{attrs:{id:"进程线程协程的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程线程协程的区别"}},[t._v("#")]),t._v(" 进程线程协程的区别")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/pages/articles/linux/进程线程协程.html"}},[t._v("进程线程协程")])],1),t._v(" "),a("h2",{attrs:{id:"javascript和typescript的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript和typescript的区别"}},[t._v("#")]),t._v(" JavaScript和TypeScript的区别")]),t._v(" "),a("ul",[a("li",[t._v("TypeScript 从核心语言方面和类概念的模塑方面对 JavaScript 对象模型进行扩展。")]),t._v(" "),a("li",[t._v("JavaScript 代码可以在无需任何修改的情况下与 TypeScript 一同工作，同时可以使用编译器将 TypeScript 代码转换为 JavaScript。")]),t._v(" "),a("li",[t._v("TypeScript 通过类型注解提供编译时的静态类型检查。")]),t._v(" "),a("li",[t._v("TypeScript 中的数据要求带有明确的类型，JavaScript不要求。")]),t._v(" "),a("li",[t._v("TypeScript 为函数提供了缺省参数值。")]),t._v(" "),a("li",[t._v("TypeScript 引入了 JavaScript 中没有的“类”概念。")]),t._v(" "),a("li",[t._v("TypeScript 中引入了模块的概念，可以把声明、数据、函数和类封装在模块中。")])]),t._v(" "),a("h2",{attrs:{id:"localstorage-sessionstorage-cookie的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localstorage-sessionstorage-cookie的区别"}},[t._v("#")]),t._v(" localstorage,sessionstorage,cookie的区别")]),t._v(" "),a("ul",[a("li",[t._v("相同点是都是保存在浏览器端、且同源的")]),t._v(" "),a("li",[t._v("cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递，而sessionStorage和localStorage不会自动把数据发送给服务器，仅在本地保存。cookie数据还有路径（path）的概念，可以限制cookie只属于某个路径下")]),t._v(" "),a("li",[t._v("存储大小限制也不同，cookie数据不能超过4K，同时因为每次http请求都会携带cookie、所以cookie只适合保存很小的数据，如会话标识。sessionStorage和localStorage虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大")]),t._v(" "),a("li",[t._v("数据有效期不同，sessionStorage：仅在当前浏览器窗口关闭之前有效；localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie：只在设置的cookie过期时间之前有效，即使窗口关闭或浏览器关闭")]),t._v(" "),a("li",[t._v("作用域不同，sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面；localstorage在所有同源窗口中都是共享的；cookie也是在所有同源窗口中都是共享的")]),t._v(" "),a("li",[t._v("webStorage(webstorage是本地存储，存储在客户端，包括localStorage和sessionStorage)支持事件通知机制，可以将数据更新的通知发送给监听者")]),t._v(" "),a("li",[t._v("webStorage的api接口使用更方便")])]),t._v(" "),a("h2",{attrs:{id:"http1-0-1-1-2-0的不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http1-0-1-1-2-0的不同"}},[t._v("#")]),t._v(" HTTP1.0/1.1/2.0的不同")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/pages/articles/http/HTTP1.0,1.1,2.0的区别.html"}},[t._v("HTTP1.0,1.1,2.0的区别")])],1),t._v(" "),a("h2",{attrs:{id:"mongodb和mysql的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb和mysql的区别"}},[t._v("#")]),t._v(" MongoDB和MySQL的区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据库")]),t._v(" "),a("th",[t._v("MongoDB")]),t._v(" "),a("th",[t._v("MySQL")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("数据库模型")]),t._v(" "),a("td",[t._v("非关系型")]),t._v(" "),a("td",[t._v("关系型")])]),t._v(" "),a("tr",[a("td",[t._v("存储方式")]),t._v(" "),a("td",[t._v("以类JSON的文档的格式存储")]),t._v(" "),a("td",[t._v("不同引擎有不同的存储方式")])]),t._v(" "),a("tr",[a("td",[t._v("查询语句")]),t._v(" "),a("td",[t._v("MongoDB查询方式（类似JavaScript的函数）")]),t._v(" "),a("td",[t._v("SQL语句")])]),t._v(" "),a("tr",[a("td",[t._v("数据处理方式")]),t._v(" "),a("td",[t._v("基于内存，将热数据存放在物理内存中，从而达到高速读写")]),t._v(" "),a("td",[t._v("不同引擎有自己的特点")])]),t._v(" "),a("tr",[a("td",[t._v("成熟度")]),t._v(" "),a("td",[t._v("新兴数据库，成熟度较低")]),t._v(" "),a("td",[t._v("成熟度高")])]),t._v(" "),a("tr",[a("td",[t._v("广泛度")]),t._v(" "),a("td",[t._v("NoSQL数据库中，比较完善且开源，使用人数在不断增长")]),t._v(" "),a("td",[t._v("开源数据库，市场份额不断增长")])]),t._v(" "),a("tr",[a("td",[t._v("事务性")]),t._v(" "),a("td",[t._v("仅支持单文档事务操作，弱一致性")]),t._v(" "),a("td",[t._v("支持事务操作")])]),t._v(" "),a("tr",[a("td",[t._v("占用空间")]),t._v(" "),a("td",[t._v("占用空间大")]),t._v(" "),a("td",[t._v("占用空间小")])]),t._v(" "),a("tr",[a("td",[t._v("join操作")]),t._v(" "),a("td",[t._v("MongoDB没有join")]),t._v(" "),a("td",[t._v("MySQL支持join")])])])]),t._v(" "),a("h2",{attrs:{id:"width的100-与auto的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#width的100-与auto的区别"}},[t._v("#")]),t._v(" width的100%与auto的区别")]),t._v(" "),a("p",[t._v("width: auto")]),t._v(" "),a("ul",[a("li",[t._v("子元素（包括content+padding+border+margin）撑满整个父元素的content区域")]),t._v(" "),a("li",[t._v("子元素有margin、border、padding时，会减去子元素content区域相对应的width值")]),t._v(" "),a("li",[t._v("父元素的content = 子元素（content + padding + border + margin）")])]),t._v(" "),a("p",[t._v("width: 100%")]),t._v(" "),a("ul",[a("li",[t._v("强制将子元素的content区域 撑满 父元素的content区域")]),t._v(" "),a("li",[t._v("子元素有margin、border、padding时，不改变子元素content区域的width，而是溢出父盒子，保持原有值")]),t._v(" "),a("li",[t._v("父元素的content = 子元素的content")])]),t._v(" "),a("h2",{attrs:{id:"标准盒模型和怪异盒模型的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准盒模型和怪异盒模型的区别"}},[t._v("#")]),t._v(" 标准盒模型和怪异盒模型的区别")]),t._v(" "),a("p",[a("code",[t._v("box-sizing: content-box;")]),t._v("(默认值)")]),t._v(" "),a("p",[t._v("标准盒模型，又叫W3C标准盒模型："),a("code",[t._v("contentWidth = width")]),t._v("，即此时的宽高是内容区的宽高")]),t._v(" "),a("p",[a("code",[t._v("box-sizing: border-box;")])]),t._v(" "),a("p",[t._v("怪异盒模型，又叫IE6混杂盒模型："),a("code",[t._v("contentWidth = width - 2*padding - 2*border")]),t._v("，即此时的宽高包括了padding和border，内容区的宽高需减去两侧padding和border")]),t._v(" "),a("h2",{attrs:{id:"display-none和visibility-hidden和opacity-0的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display-none和visibility-hidden和opacity-0的区别"}},[t._v("#")]),t._v(" display:none和visibility:hidden和opacity:0的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("display: none")]),t._v("隐藏后的元素不占据任何空间，而"),a("code",[t._v("visibility: hidden")]),t._v("隐藏后的元素空间依旧保留，"),a("code",[t._v("opacity: 0")]),t._v("隐藏后也占空间")]),t._v(" "),a("li",[t._v("只有"),a("code",[t._v("opacity: 0")]),t._v("依旧会监听事件，其余两个隐藏后无法监听事件")]),t._v(" "),a("li",[a("code",[t._v("visibility")]),t._v("具有继承性，给父元素设置"),a("code",[t._v("visibility: hidden;")]),t._v("子元素也会继承这个属性。但是如果重新给子元素设置"),a("code",[t._v("visibility: visible")]),t._v(",则子元素又会显示出来。"),a("code",[t._v("display: none")]),t._v("和"),a("code",[t._v("opacity")]),t._v("都不能继承，有株连性")]),t._v(" "),a("li",[a("code",[t._v("visibility: hidden")]),t._v("和"),a("code",[t._v("opacity: 0")]),t._v("不会影响计数器的计数，例如在一组ol,li列表中隐藏某一个li元素，"),a("code",[t._v("visibility: hidden")]),t._v("和"),a("code",[t._v("opacity: 0")]),t._v("虽然让一个元素不见了，但是其计数器仍在运行。这和"),a("code",[t._v("display: none")]),t._v("完全不一样")]),t._v(" "),a("li",[t._v("CSS3的"),a("code",[t._v("transition")]),t._v("支持"),a("code",[t._v("visibility")]),t._v("和"),a("code",[t._v("opacity")]),t._v("属性，但是并不支持"),a("code",[t._v("display")]),t._v("，由于"),a("code",[t._v("transition")]),t._v("可以延迟执行，因此可以配合"),a("code",[t._v("visibility")]),t._v("使用纯css实现"),a("code",[t._v("hover")]),t._v("延时显示效果。"),a("code",[t._v("visibility")]),t._v("会立即显示，隐藏时会延时，"),a("code",[t._v("opacity")]),t._v("可以延时显示和隐藏")]),t._v(" "),a("li",[a("code",[t._v("display: none")]),t._v("会触发"),a("code",[t._v("reflow")]),t._v("和"),a("code",[t._v("repaint")]),t._v("，但是"),a("code",[t._v("visibility: hidden")]),t._v("只会触发"),a("code",[t._v("repaint")]),t._v("，"),a("code",[t._v("opacity: 0")]),t._v("会触发css3硬件加速，不触发回流重绘，大大减少性能消耗")])]),t._v(" "),a("h2",{attrs:{id:"sass和less的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass和less的区别"}},[t._v("#")]),t._v(" Sass和Less的区别")]),t._v(" "),a("p",[t._v("相同之处")]),t._v(" "),a("ul",[a("li",[t._v("混入(Mixins)——class中的class；")]),t._v(" "),a("li",[t._v("参数混入——可以传递参数的class，就像函数一样，Sass用逗号分隔参数，Less用分号；")]),t._v(" "),a("li",[t._v("嵌套规则——class中嵌套class，从而减少重复的代码；")]),t._v(" "),a("li",[t._v("运算——CSS中用上数学；")]),t._v(" "),a("li",[t._v("颜色功能——可以编辑颜色；")]),t._v(" "),a("li",[t._v("名字空间(namespace)——分组样式，从而可以被调用；")]),t._v(" "),a("li",[t._v("作用域——局部修改样式；")]),t._v(" "),a("li",[t._v("JavaScript赋值——在CSS中使用JavaScript表达式赋值。")])]),t._v(" "),a("p",[t._v("不同之处")]),t._v(" "),a("ul",[a("li",[t._v("环境不同：Sass基于Ruby写的，服务端处理，Less基于Node写的，客户端处理")]),t._v(" "),a("li",[t._v("变量命名：Sass使用"),a("code",[t._v("$")]),t._v("，Less使用"),a("code",[t._v("@")])]),t._v(" "),a("li",[t._v("输出设置，Less没有输出设置，Sass提供4中输出选项：nested（嵌套，默认格式）, compact（紧密型，每条样式占一行）, compressed（压缩） 和 expanded（像是手写的样式）。")]),t._v(" "),a("li",[t._v("Sass支持条件语句，可以使用"),a("code",[t._v("@if{}")]),t._v("、"),a("code",[t._v("@else{}")]),t._v("、"),a("code",[t._v("@for{}")]),t._v("、"),a("code",[t._v("@each")]),t._v("、"),a("code",[t._v("@while")]),t._v("循环、"),a("code",[t._v("@extend")]),t._v("继承、"),a("code",[t._v("@import引")]),t._v("用等等，而Less不支持。")]),t._v(" "),a("li",[t._v("Sass支持数据结构："),a("code",[t._v("@list")]),t._v("数组、"),a("code",[t._v("@map")]),t._v("对象，也包括"),a("code",[t._v("string")]),t._v("，"),a("code",[t._v("number")]),t._v("，"),a("code",[t._v("function")])])]),t._v(" "),a("h2",{attrs:{id:"sass中-include和-extend的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass中-include和-extend的区别"}},[t._v("#")]),t._v(" Sass中@include和@extend的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("@include")]),t._v("是引入"),a("code",[t._v("@mixin")]),t._v("定义的混合，会直接把"),a("code",[t._v("@mixin")]),t._v("里面的代码拷贝到"),a("code",[t._v("@include")]),t._v("里面，可能会导致生成重复的样式，并没有起到提取公用的效果，导致生成的CSS过大")]),t._v(" "),a("li",[a("code",[t._v("@extend")]),t._v("是将一个选择器下的所有样式继承给另一个选择器，相同的样式编译后只会出现一次")])]),t._v(" "),a("p",[t._v("扩展："),a("code",[t._v("%")]),t._v("定义占位符选择器，不会被编译到CSS文件中")]),t._v(" "),a("div",{staticClass:"language-scss line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[a("span",{pre:!0,attrs:{class:"token placeholder"}},[t._v("%log")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".log-debug ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token placeholder selector"}},[t._v("%log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".log-error ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@extend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token placeholder selector"}},[t._v("%log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px dotted red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("编译后")]),t._v(" "),a("div",{staticClass:"language-scss line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".log-error, .log-debug ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".log-debug ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".log-error ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3px dotted red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"css中link和-import的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css中link和-import的区别"}},[t._v("#")]),t._v(" CSS中link和@import的区别")]),t._v(" "),a("ul",[a("li",[t._v("link是XHTML标签，无兼容问题；@import是在CSS2.1提出的，低版本的浏览器不支持（IE5以上才能识别）。")]),t._v(" "),a("li",[t._v("link是XHTML标签，除了加载CSS外，还可以定义RSS等其他事务；@import属于CSS范畴，只能加载CSS。")]),t._v(" "),a("li",[t._v("link引用CSS时，在页面载入时同时加载；@import需要页面网页完全载入以后加载。")]),t._v(" "),a("li",[t._v("可以通过JS操作DOM，插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import的方式插入样式。")]),t._v(" "),a("li",[t._v("link最大限度支持并行下载，@import过多嵌套导致串行下载，出现FOUC（浏览器样式闪烁或者叫做无样式内存闪烁）")]),t._v(" "),a("li",[t._v("link方式的样式的权重高于@import的权重。")])]),t._v(" "),a("p",[t._v("不太理解网上都说的这个link方式引入的样式权重更高。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果是单纯的两个分开写，在head标签里面写两个引入，哪个在后面哪个生效，这个和普通的权重判断一样")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("如果是link的文件里面同时写了@import，此时的@import必须写在文件顶部才能生效，后面如果存在相同样式，会覆盖掉@import中引入的，即便它是后加载进来的，可能是因为这个有人说link的权重更高吧")])])]),t._v(" "),a("p",[t._v("@import最优写法")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Windows IE4/ NS4, Mac OS X IE5, Macintosh IE4/IE5/NS4不识别 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style.css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Windows IE4/ NS4, Macintosh IE4/NS4不识别 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"style.css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Windows NS4, Macintosh NS4不识别 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("style.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Windows NS4, Mac OS X IE5, Macintosh IE4/IE5/NS4不识别 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string url"}},[t._v("'style.css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Windows NS4, Macintosh NS4不识别 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string url"}},[t._v('"style.css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("由上分析知道，"),a("code",[t._v("@import url(style.css)")]),t._v(" 和"),a("code",[t._v('@import url("style.css")')]),t._v("是最优的选择，兼容的浏览器最多。从字节优化的角度来看"),a("code",[t._v("@import url(style.css)")]),t._v("最值得推荐。")]),t._v(" "),a("h2",{attrs:{id:"浏览器和node事件循环的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器和node事件循环的区别"}},[t._v("#")]),t._v(" 浏览器和Node事件循环的区别")]),t._v(" "),a("p",[t._v("参考文章："),a("a",{attrs:{href:"https://www.zhihu.com/question/268007969",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("async/await 在chrome 环境和 node 环境的 执行结果不一致，求解？"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("其中一个主要的区别在于浏览器的"),a("code",[t._v("event loop")]),t._v("和"),a("code",[t._v("nodejs")]),t._v("的"),a("code",[t._v("event loop")]),t._v(" 在处理异步事件的顺序是不同的。"),a("code",[t._v("nodejs")]),t._v("中有"),a("code",[t._v("micro event")]),t._v(";其中"),a("code",[t._v("Promise")]),t._v("属于"),a("code",[t._v("micro event")]),t._v(" 该异步事件的处理顺序就和浏览器不同。")]),t._v(" "),a("p",[a("code",[t._v("nodejs")]),t._v(" V11.0以前，"),a("code",[t._v("nodejs")]),t._v("的事件队列会先处理的宏任务，之后的版本这两者之间的顺序就相同了，产生差异的根本原因是V8引擎的区别，而不是浏览器与Node的区别。")]),t._v(" "),a("blockquote",[a("p",[t._v("一般来说，当遇到Chrome和Node.js在JavaScript运行方面有差异，应以最新的Chrome的行为为准。虽然Chrome和Node.js都使用V8为其JavaScript引擎，但两者的V8更新策略不同。Chrome每次升级会同时更新到V8的最新版。而Node更新小版本时V8也只更新小版本，只有Node更新大版本时才会更新V8大版本。所以绝大部分时候Node的V8会比同时期的Chrome的V8要落后。")]),t._v(" "),a("p",[t._v("来自贺师俊")])]),t._v(" "),a("ul",[a("li",[t._v("Node端，"),a("code",[t._v("microtask")]),t._v(" 在事件循环的各个阶段之间执行。执行一个宏任务时会把里面的代码执行完之后，产生的微任务并不会在此轮事件循环中执行，而是会去执行下一个宏任务，宏任务执行完后再回到微任务队列执行微任务")]),t._v(" "),a("li",[t._v("浏览器端，"),a("code",[t._v("microtask")]),t._v(" 在事件循环的 "),a("code",[t._v("macrotask")]),t._v(" 执行完之后执行，即每当一个宏任务执行完成后，在执行下一个宏任务之前会清空当前的微任务队列，即使再次产生了微任务，即必须保证在执行下一次宏任务时，微任务队列是空的")])]),t._v(" "),a("h2",{attrs:{id:"gif-jpg-png-webp的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gif-jpg-png-webp的区别"}},[t._v("#")]),t._v(" gif,jpg,png,webp的区别")]),t._v(" "),a("p",[t._v("参考文章："),a("a",{attrs:{href:"https://blog.csdn.net/weixin_44022064/article/details/103823368",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("聊一聊几种常用web图片格式：gif、jpg、png、webp"),a("OutboundLink")],1)]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("格式")]),t._v(" "),a("th",[t._v("优点")]),t._v(" "),a("th",[t._v("缺点")]),t._v(" "),a("th",[t._v("适用场景")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("gif")]),t._v(" "),a("td",[t._v("文件小，支持动画、透明，无兼容性问题")]),t._v(" "),a("td",[t._v("只支持256(2^8)种颜色")]),t._v(" "),a("td",[t._v("色彩简单的logo、icon、动图")])]),t._v(" "),a("tr",[a("td",[t._v("jpg")]),t._v(" "),a("td",[t._v("色彩丰富，文件小")]),t._v(" "),a("td",[t._v("有损压缩，反复保存图片质量下降明显")]),t._v(" "),a("td",[t._v("色彩丰富的图片/渐变图像")])]),t._v(" "),a("tr",[a("td",[t._v("png")]),t._v(" "),a("td",[t._v("无损压缩，支持透明，简单图片尺寸小")]),t._v(" "),a("td",[t._v("不支持动画，色彩丰富的图片尺寸大")]),t._v(" "),a("td",[t._v("logo/icon/透明图")])]),t._v(" "),a("tr",[a("td",[t._v("webp")]),t._v(" "),a("td",[t._v("文件小，支持有损和无损压缩，支持动画、透明")]),t._v(" "),a("td",[t._v("浏览器兼容性不好")]),t._v(" "),a("td",[t._v("支持webp格式的app和webview")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIPS")]),t._v(" "),a("p",[t._v("JPG与JPEG的区别：")]),t._v(" "),a("p",[t._v("没有区别。全名、正式扩展名是JPEG。但因DOS、Windows 95等早期系统采用的8.3命名规则只支持最长3字符的扩展名，为了兼容采用了.jpg。也因历史习惯和兼容性考虑，.jpg目前更流行。类似html和htm的区别")])]),t._v(" "),a("h2",{attrs:{id:"isnan与number-isnan的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isnan与number-isnan的区别"}},[t._v("#")]),t._v(" isNaN与Number.isNaN的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("isNaN()")]),t._v("是ES5的方法，"),a("code",[t._v("Number.isNaN()")]),t._v("是ES6的方法")]),t._v(" "),a("li",[t._v("可能有人会认为"),a("code",[t._v("isNaN()")]),t._v("直译为“是不是NaN”，其本意不是，"),a("code",[t._v("isNaN()")]),t._v("本意是通过Number方法把参数转换成数字类型，如若转换成功，则返回false，反之返回true，它只是判断参数是否能转成数字，不能用来判断是否严格等于NaN。如果要判断某个值是否严格等于NaN不能用这个方法")]),t._v(" "),a("li",[t._v("ES6提供了"),a("code",[t._v("Number.isNaN()")]),t._v("方法用来判断一个值是否严格等于NaN，它会首先判断传入的值是否为数字类型，如不是，直接返回false。不会出现类型转换")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("为什么NaN !== NaN")]),t._v(" "),a("p",[t._v("NaN只是Number上的一个静态属性。比如"),a("code",[t._v("Number('echo')")]),t._v("会得到NaN，它只是为了告诉你这个值不是一个数字，一种表示方法，而非一个精准有效的值，因此NaN不能参与计算，也无法与自身比较。")])]),t._v(" "),a("li",[a("p",[t._v("什么情况下产生NaN")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当Number提供的类型转换方法在解析一个值却无法返回数字时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123echo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'时间跳跃123.1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123.1时间跳跃'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123.1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算中使用- / *运算符，参与计算的值转换类型失败时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'听风是风'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123时间跳跃'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个数字0相除也会得到NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Infinity")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("isNaN方法的含义，如何判断一个值严格等于NaN")]),t._v(" "),a("p",[t._v("全局方法"),a("code",[t._v("isNaN()")]),t._v("会先把传入的参数调用一次"),a("code",[t._v("Number()")]),t._v("，只是判断这个参数能不能转换成数字，如果能返回false，不能返回true，比如传入非数字开头的字符串会返回true")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qweqwe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qweqwe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("手动实现")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MDN提供的Polyfill")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN是JS中唯一一个自身不相等的存在")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIPS")]),t._v(" "),a("p",[t._v("相同的ES6提供的"),a("code",[t._v("Number.isFinite(value)")]),t._v("与全局"),a("code",[t._v("isFinite()")]),t._v("目的一样，是为了解决全局方法会对传入的参数进行转换")]),t._v(" "),a("p",[t._v("和全局的 "),a("code",[t._v("isFinite()")]),t._v(" 函数相比，这个方法不会强制将一个非数值的参数转换成数值，这就意味着，只有数值类型的值，且是有穷的（finite），才返回 true。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2e64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false, would've been true with global isFinite('0')")]),t._v("\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false, would've been true with global isFinite(null)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("MDN提供的Polyfill")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("h2",{attrs:{id:"观察者模式与发布订阅模式的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式与发布订阅模式的区别"}},[t._v("#")]),t._v(" 观察者模式与发布订阅模式的区别")]),t._v(" "),a("p",[t._v("观察者模式(Observer pattern)，属于行为型模式的一种，它定义了一种一对多的依赖关系，让多个观察者对象同时监听某一个主题对象。这个主体对象在状态变化时，会通知所有的观察者对象。")]),t._v(" "),a("p",[t._v("发布-订阅模式(Publish–subscribe pattern)，消息的发送方，叫做发布者（publishers），消息不会直接发送给特定的接收者，叫做订阅者。意思就是发布者和订阅者不知道对方的存在。需要一个第三方组件，叫做信息中介，它将订阅者和发布者串联起来，它过滤和分配所有输入的消息。换句话说，发布-订阅模式用来处理不同系统组件的信息交流，即使这些组件不知道对方的存在。需要一个第三方组件，叫做信息中介，它将订阅者和发布者串联起来。")]),t._v(" "),a("h2",{attrs:{id:"eslint和prettier的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint和prettier的区别"}},[t._v("#")]),t._v(" ESLint和Prettier的区别")]),t._v(" "),a("p",[t._v("参考文章："),a("a",{attrs:{href:"https://juejin.cn/post/6844904159670435854",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("彻底搞清楚ESLint和Prettier的职责关系"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("ESLint、StyleLint、TSLint(已废弃)都属于Linters，它们通过对代码的AST进行分析，并按照一系列可配置的规则，为用户提供代码校验的功能。他们的规则主要分为两大类：Formatting Rules和Code-quality Rules。通常，Linters的客户端还会提供修复功能(--fix)，我们常用的IDE借助这些客户端便可以实现代码自动修复的功能")]),t._v(" "),a("p",[t._v("Linters的自动修复是基于上述两种规则：Formatting和Code-quality。在Code-quality上，Linters做的做够好了，像no-unused-vars、no-extra-bind、no-undef等。但是在Formatting上，Linters虽然能在一定程度上保证代码的格式，像max-len、no-mixed-spaces-and-tabs、keyword-spacing等, 但是在书写工业化代码的时候，我们会有更高的要求：保证团队的代码风格完全一致。")]),t._v(" "),a("p",[t._v("在不超出max-len的条件下，如下两种写法Linters都是允许的：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 小明写的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 小李写的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("Prettier是一个多语言支持的代码格式化工具，它也是通过AST解析代码，然后以一个特定的格式输出格式化后的代码。相比Linters，Prettier没有那么多针语言语法的规则，而是一个纯粹的代码格式化工具，在Prettier看来，任何东西都是可以格式化的。")]),t._v(" "),a("p",[t._v("如何解决两者规则冲突问题")]),t._v(" "),a("p",[t._v("有两种思路：")]),t._v(" "),a("ol",[a("li",[t._v("先用Prettier格式化，再用Linters格式化")]),t._v(" "),a("li",[t._v("使用Linters按照Prettier的规则格式化（最佳实践）")])]),t._v(" "),a("p",[t._v("对于第1种思路，一般是使用"),a("code",[t._v("prettier-eslint")]),t._v("这个库，按照code -> prettier -> eslint --fix的流程格式化代码，因此它不得不格式化两次才能完成操作，会有性能问题，所以目前已经不推荐这个方案了。")]),t._v(" "),a("p",[t._v("第2种，Prettier将会作为Linters中Formatting Rules的完全替代品参与到代码格式化的过程中。为了达成这个目标，我们有两件事需要做：")]),t._v(" "),a("ul",[a("li",[t._v("禁用掉Linters中所有与Prettier冲突的Formatting Rules")]),t._v(" "),a("li",[t._v("针对Prettier自身的规则，使用Prettier进行格式化")])]),t._v(" "),a("h2",{attrs:{id:"正向代理和反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正向代理和反向代理"}},[t._v("#")]),t._v(" 正向代理和反向代理")]),t._v(" "),a("p",[t._v("参考文章："),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/69072041",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("什么是正向代理与反向代理"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("正向代理是从客户端的角度出发，服务于特定用户（比如说一个局域网内的客户）以访问非特定的服务；反向代理正好与此相反，从服务端的角度出发，服务于非特定用户（通常是所有用户），已访问特定的服务。")]),t._v(" "),a("p",[t._v("为什么使用代理服务器？")]),t._v(" "),a("ul",[a("li",[t._v("提高访问速度：由于目标主机返回的数据会存放在代理服务器的硬盘中，因此下一次客户再访问相同的站点数据时，会直接从代理服务器的硬盘中读取，起到了缓存的作用，尤其对于热门网站能明显提高访问速度。")]),t._v(" "),a("li",[t._v("防火墙作用：由于所有的客户机请求都必须通过代理服务器访问远程站点，因此可以在代理服务器上设限，过滤掉某些不安全信息。同时正向代理中上网者可以隐藏自己的IP,免受攻击。")]),t._v(" "),a("li",[t._v("突破访问限制：互联网上有许多开发的代理服务器，客户机在访问受限时，可通过不受限的代理服务器访问目标站点，通俗说，我们使用的翻墙浏览器就是利用了代理服务器，可以直接访问外网。")])]),t._v(" "),a("p",[t._v("正向代理（forward proxy），一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并制定目标（原始服务器），然后代理向原始服务器转发请求并将获得的内容返回给客户端，客户端才能使用正向代理。我们平时说的代理就是指正向代理。")]),t._v(" "),a("p",[t._v("A向C借钱，由于一些情况不能直接向C借钱，于是A想了一个办法，他让B去向C借钱，这样B就代替A向C借钱，A就得到了C的钱，C并不知道A的存在，B就充当了A的代理人的角色。")]),t._v(" "),a("p",[t._v("反向代理（Reverse Proxy），以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求的客户端，此时代理服务器对外表现为一个反向代理服务器。")]),t._v(" "),a("p",[t._v("A向B借钱，B没有拿自己的钱，而是悄悄地向C借钱，拿到钱之后再交给A,A以为是B的钱，他并不知道C的存在。")]),t._v(" "),a("p",[t._v("正向代理和反向代理的区别")]),t._v(" "),a("p",[t._v("位置不同")]),t._v(" "),a("ul",[a("li",[t._v("正向代理，架设在客户机和目标主机之间；")]),t._v(" "),a("li",[t._v("反向代理，架设在服务器端；")])]),t._v(" "),a("p",[t._v("代理对象不同")]),t._v(" "),a("ul",[a("li",[t._v("正向代理，代理客户端，服务端不知道实际发起请求的客户端；")]),t._v(" "),a("li",[t._v("反向代理，代理服务端，客户端不知道实际提供服务的服务端；")])]),t._v(" "),a("h2",{attrs:{id:"crlf-lf-cr的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crlf-lf-cr的区别"}},[t._v("#")]),t._v(" CRLF,LF,CR的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("CR：Carriage Return，对应ASCII中转义字符"),a("code",[t._v("\\r")]),t._v("，表示回车")])]),t._v(" "),a("li",[a("p",[t._v("LF：Linefeed，对应ASCII中转义字符"),a("code",[t._v("\\n")]),t._v("，表示换行")])]),t._v(" "),a("li",[a("p",[t._v("CRLF：Carriage Return & Linefeed，"),a("code",[t._v("\\r\\n")]),t._v("，表示回车并换行")])]),t._v(" "),a("li",[a("p",[t._v("Windows操作系统采用两个字符来进行换行，即CRLF；")])]),t._v(" "),a("li",[a("p",[t._v("Unix/Linux/Mac OS X操作系统采用单个字符LF来进行换行；")])]),t._v(" "),a("li",[a("p",[t._v("另外，MacIntosh操作系统（即早期的Mac操作系统）采用单个字符CR来进行换行。")])])]),t._v(" "),a("p",[t._v("据野史记载，在很久以前的机械打字机时代，CR和LF分别具有不同的作用：LF会将打印纸张上移一行位置，但是保持当前打字的水平位置不变；CR则会将“Carriage”（打字机上的滚动托架）滚回到打印纸张的最左侧，但是保持当前打字的垂直位置不变，即还是在同一行。")]),t._v(" "),a("p",[t._v("当CR和LF组合使用时，则会将打印纸张上移一行，且下一个打字位置将回到该行的最左侧，也就是我们今天所理解的换行操作。")]),t._v(" "),a("p",[t._v("随着时间的推移，机械打字机渐渐地退出了历史舞台，当初的纸张变成了今天的显示器，打字机的按键也演变为了如今的键盘。在操作系统出现的年代，受限于内存和软盘空间的不足，一些操作系统的设计者决定采用单个字符来表示换行符，如Unix的LF、MacIntosh的CR。他们的意图都是为了进行换行操作，只是当初并没有一个国际标准（或者其他原因，鬼知道），所以才有这样字符上的不同。")]),t._v(" "),a("p",[t._v("LF和CRLF之间的不同经常会导致不同会导致使用不同系统的同事之间的代码冲突问题。在你使用git拉取代码的时候，git会自动将代码当中与你当前系统不同的换行方式转化成你当前系统的换行方式，从而造成这种冲突。")]),t._v(" "),a("p",[t._v("window系统解决办法：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("修改git全局配置，禁止git自动将LF转换成CRLF,  命令：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.autocrlf "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("修改编辑器的用户配置，例如"),a("code",[t._v(".vscode/setting.json")])]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.eol"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件换行使用LF方式")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v(".editorconfig")]),t._v("文件")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("end_of_line = lf\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v(".gitattributes")]),t._v(" 配置")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("* text=auto eol=lf\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"vue中computed与方法和watch的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue中computed与方法和watch的区别"}},[t._v("#")]),t._v(" Vue中computed与方法和watch的区别")]),t._v(" "),a("p",[t._v("官方文档："),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/computed.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("计算属性与侦听器"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("计算属性与方法")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Temp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  computed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reversedMessage1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  methods"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reversedMessage2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("p",[a("code",[t._v("reversedMessage1")]),t._v("和"),a("code",[t._v("reversedMessage2()")]),t._v("得到的结果都是一样的。然而，不同的是"),a("strong",[t._v("计算属性是基于它们的响应式依赖进行缓存的")]),t._v("。只在相关响应式依赖发生改变时它们才会重新求值。这就意味着只要"),a("code",[t._v("message")]),t._v("还没有发生改变，多次访问 "),a("code",[t._v("reversedMessage1")]),t._v("计算属性会立即返回之前的计算结果，而不必再次执行函数。相比之下，每当触发重新渲染时，调用方法将总会再次执行函数。")]),t._v(" "),a("p",[t._v("计算属性与侦听器")]),t._v(" "),a("p",[t._v("虽然计算属性在大多数情况下更合适，但有时也需要一个自定义的侦听器。这就是为什么Vue通过"),a("code",[t._v("watch")]),t._v("选项提供了一个更通用的方法，来响应数据的变化。当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。")]),t._v(" "),a("p",[t._v("区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("computed")]),t._v("是计算值，注重结果，并且会产生一个新的属性，与data里面的用法一样，"),a("code",[t._v("watch")]),t._v("是观察的动作，注重过程")]),t._v(" "),a("li",[t._v("应用："),a("code",[t._v("computed")]),t._v("就是简化"),a("code",[t._v("tempalte")]),t._v("里面"),a("code",[t._v("{{}}")]),t._v("计算和处理"),a("code",[t._v("props")]),t._v("或"),a("code",[t._v("$emit")]),t._v("的传值，"),a("code",[t._v("watch")]),t._v("监听"),a("code",[t._v("props")]),t._v("，"),a("code",[t._v("$emit")]),t._v("或本组件的值执行异步操作")]),t._v(" "),a("li",[a("code",[t._v("computed")]),t._v("具有缓存性，页面重新渲染值不变化，计算属性会立即返回之前的计算结果，而不必再次执行函数(getter)，"),a("code",[t._v("watch")]),t._v("不存在缓存，数据变化即执行")]),t._v(" "),a("li",[a("code",[t._v("computed")]),t._v("其实只是纯数据操作，需要返回数据结果，不建议在里面去修改外部的某个值，虽然使用了也没问题（可能eslint报错），如果有需要请使用"),a("code",[t._v("get")]),t._v("和"),a("code",[t._v("set")]),t._v("方法。但是"),a("code",[t._v("watch")]),t._v("就可以监测某个数据发生了变更进行一系列的回调操作，不仅仅局限于返回数据")]),t._v(" "),a("li",[a("code",[t._v("computed")]),t._v("会在vue实例化过程中执行一次(前提是这个计算属性在"),a("code",[t._v("template")]),t._v("有用到，如果没有用到，这个"),a("code",[t._v("computed")]),t._v("永远不会执行，包括vue初始化时)；"),a("code",[t._v("watch")]),t._v("在vue初始化时不会执行(除非设置"),a("code",[t._v("immediate: true")]),t._v(")，只会在监听的数据变化时执行")]),t._v(" "),a("li",[t._v("如果一个属性是由其他属性计算而来的，这个属性依赖其他属性，是多对一或者一对一，一般用"),a("code",[t._v("computed")]),t._v("（应该不会用"),a("code",[t._v("watch")]),t._v("分别监听所有的属性来修改这一个属性吧）")])]),t._v(" "),a("h2",{attrs:{id:"表单的readonly和disabled的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单的readonly和disabled的区别"}},[t._v("#")]),t._v(" 表单的readonly和disabled的区别")]),t._v(" "),a("p",[t._v("在表单元素中，"),a("code",[t._v("readonly")]),t._v("和"),a("code",[t._v("disable")]),t._v('有类似之处，因为它们都可以将一些表单元素设置为"不可用"状态，但还是有着明显的区别')]),t._v(" "),a("ol",[a("li",[t._v("设置两个属性的外观不一样，"),a("code",[t._v("readonly")]),t._v("外观没有变化，"),a("code",[t._v("disabled")]),t._v("会变灰。")]),t._v(" "),a("li",[a("code",[t._v("readonly")]),t._v("只是将元素设置为只读，其他操作正常，用户仍然可以使用"),a("code",[t._v("tab")]),t._v("键切换到该字段，还可以选中或拷贝其文本，而"),a("code",[t._v("disabled")]),t._v("阻止对元素的一切操作，例如获取焦点，点击事件等等。")]),t._v(" "),a("li",[a("code",[t._v("readonly")]),t._v("属性只对表单元素的"),a("code",[t._v("<input>")]),t._v("，"),a("code",[t._v("<textarea>")]),t._v("有效，但是"),a("code",[t._v("input")]),t._v("也只对输入框类型（"),a("code",[t._v("text/password/email/search/url/number")]),t._v("）、日期时间选择（"),a("code",[t._v("date/month/week/time/datetime/datetime-local")]),t._v("）有效，对按钮（"),a("code",[t._v("button/radio/checkbox/submin/reset")]),t._v("）、颜色（"),a("code",[t._v("color")]),t._v("）、滑块（"),a("code",[t._v("range")]),t._v("）、文件（"),a("code",[t._v("file")]),t._v("）、图片（"),a("code",[t._v("image")]),t._v("）都没有效果，依然可以操作。而"),a("code",[t._v("disabled")]),t._v("属性对所有的表单元素都会有效。")]),t._v(" "),a("li",[t._v("表单提交时，设置"),a("code",[t._v("readonly")]),t._v("的表单元素value值依然会被提交，而设置"),a("code",[t._v("disabled")]),t._v("的表单元素值不会被提交。")])]),t._v(" "),a("p",[t._v("element-ui的表单组件很多都是自己另外实现的，例如：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("el-color-picker")]),t._v("：并不是用"),a("code",[t._v('input[type="color"]')]),t._v("实现的，而是"),a("code",[t._v("div")]),t._v("背景颜色渐变，所以可用"),a("code",[t._v("readonly")]),t._v("控制")]),t._v(" "),a("li",[a("code",[t._v("el-input")]),t._v("给定"),a("code",[t._v('type="textarea"')]),t._v("可以渲染成多行文本框，是内部判断渲染的"),a("code",[t._v("textarea")]),t._v("标签")]),t._v(" "),a("li",[a("code",[t._v("el-radio")]),t._v("和"),a("code",[t._v("el-checkbox")]),t._v("虽说内部都是原生"),a("code",[t._v("input")]),t._v("实现，但是"),a("code",[t._v("readonly")]),t._v("和"),a("code",[t._v("disabled")]),t._v("时是通过"),a("code",[t._v("v-if")]),t._v("控制渲染的另外的元素")])]),t._v(" "),a("h2",{attrs:{id:"es5和es6中继承的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es5和es6中继承的区别"}},[t._v("#")]),t._v(" ES5和ES6中继承的区别")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("ES5里的构造函数就是一个普通的函数，可以使用"),a("code",[t._v("new")]),t._v("调用，也可以直接调用，而ES6的"),a("code",[t._v("class")]),t._v("不能当做普通函数直接调用，必须使用"),a("code",[t._v("new")]),t._v("操作符调用")])]),t._v(" "),a("li",[a("p",[t._v("ES5的原型方法和静态方法默认是可枚举的，而"),a("code",[t._v("class")]),t._v("的静态方法默认不可枚举，静态属性是可枚举的，如果想要获取不可枚举的属性可以使用"),a("code",[t._v("Object.getOwnPropertyNames")]),t._v("方法")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("class")]),t._v("的所有方法（包括静态方法和实例方法）都没有原型对象"),a("code",[t._v("prototype")]),t._v("，所以也没有"),a("code",[t._v("[[construct]]")]),t._v("，不能使用"),a("code",[t._v("new")]),t._v("来调用")])]),t._v(" "),a("li",[a("p",[t._v("ES6子类可以直接通过"),a("code",[t._v("__proto__")]),t._v("找到父类，而ES5是指向"),a("code",[t._v("Function.prototype")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("ES6："),a("code",[t._v("Sub.__proto__ === Sup")])]),t._v(" "),a("li",[t._v("ES5："),a("code",[t._v("Sub.__proto__ === Function.prototype")])])])]),t._v(" "),a("li",[a("p",[t._v("ES5的继承，实质是先创造子类的实例对象"),a("code",[t._v("this")]),t._v("，然后再执行父类的构造函数给它添加实例方法和属性（不执行也无所谓）。而ES6的继承机制完全不同，实质是先创造父类的实例对象"),a("code",[t._v("this")]),t._v("（当然它的"),a("code",[t._v("__proto__")]),t._v("指向的是子类的"),a("code",[t._v("prototype")]),t._v("），然后再用子类的构造函数修改"),a("code",[t._v("this")]),t._v("。这就是为啥使用"),a("code",[t._v("class")]),t._v("继承在"),a("code",[t._v("constructor")]),t._v("函数里必须调用"),a("code",[t._v("super")]),t._v("，因为子类压根没有自己的"),a("code",[t._v("this")]),t._v("，另外不能在"),a("code",[t._v("super")]),t._v("执行前访问"),a("code",[t._v("this")]),t._v("的原因也很明显了，因为调用了"),a("code",[t._v("super")]),t._v("后，"),a("code",[t._v("this")]),t._v("才有值。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("class")]),t._v("不存在变量提升，所以父类必须在子类之前定义")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("class")]),t._v("声明内部会启用严格模式")])])]),t._v(" "),a("h2",{attrs:{id:"以下3个判断数组的方法的区别和优劣"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以下3个判断数组的方法的区别和优劣"}},[t._v("#")]),t._v(" 以下3个判断数组的方法的区别和优劣")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Object.prototype.toString.call()")]),t._v(" "),a("p",[t._v("每一个继承Object的对象都有"),a("code",[t._v("toString")]),t._v("方法，如果"),a("code",[t._v("toString")]),t._v("方法没有重写的话，会返回"),a("code",[t._v("[Object type]")]),t._v("，其中type为对象的类型。但当除了Object类型的对象外，其他类型直接使用"),a("code",[t._v("toString")]),t._v("方法时，会直接返回都是内容的字符串，所以我们需要使用"),a("code",[t._v("call")]),t._v("或者"),a("code",[t._v("apply")]),t._v("方法来改变"),a("code",[t._v("toString")]),t._v("方法的执行上下文。")]),t._v(" "),a("p",[t._v("依赖于"),a("code",[t._v("Object.prototype.toString")]),t._v("并且"),a("code",[t._v("Function.prototype.call")]),t._v("没有被改变，并且"),a("code",[t._v("Symbol.toStringTag")]),t._v("没有被改变")])]),t._v(" "),a("li",[a("p",[t._v("instanceof")]),t._v(" "),a("p",[t._v("instanceof的内部机制是通过判断对象的原型链中是不是能找到类型的prototype。")])]),t._v(" "),a("li",[a("p",[t._v("Array.isArray()")]),t._v(" "),a("ul",[a("li",[t._v("当检测Array实例时，"),a("code",[t._v("Array.isArray")]),t._v("优于"),a("code",[t._v("instanceof")]),t._v("，因为"),a("code",[t._v("Array.isArray")]),t._v("可以检测出iframes")]),t._v(" "),a("li",[a("code",[t._v("Array.isArray")]),t._v("是ES5新增的方法，当不存在"),a("code",[t._v("Array.isArray")]),t._v("，可以用"),a("code",[t._v("Object.prototype.toString.call")]),t._v("实现。")])])])]),t._v(" "),a("p",[t._v("如果是精心设计的假数组")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fakeArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  __proto__"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toStringTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Array'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fakeArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Array]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fakeArray "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fakeArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("如果是修改了真实数组的原型或者"),a("code",[t._v("Symbol.toStringTag")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" realArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrealArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toStringTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrealArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("realArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Function]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("realArray "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("realArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("另外还可以通过"),a("code",[t._v("arr.constructor === Array")]),t._v("来判断是不是数组，但是"),a("code",[t._v("constructor")]),t._v("会被修改，不能保证准确，所以"),a("strong",[t._v("非特殊情况首选")]),a("code",[t._v("Array.isArray")])]),t._v(" "),a("h2",{attrs:{id:"object-keys和object-getownpropertynames的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-keys和object-getownpropertynames的区别"}},[t._v("#")]),t._v(" Object.keys和Object.getOwnPropertyNames的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Object.keys()")]),t._v("：返回"),a("strong",[t._v("对象自身")]),t._v("的可枚举的属性的数组")]),t._v(" "),a("li",[a("code",[t._v("Object.getOwnPropertyNames()")]),t._v("：所有"),a("strong",[t._v("对象自身")]),t._v("的属性名（包括不可枚举属性但不包括"),a("code",[t._v("Symbol")]),t._v("值作为名称的属性）的数组")]),t._v(" "),a("li",[a("code",[t._v("Object.getOwnPropertySymbols()")]),t._v("：返回一个包含"),a("strong",[t._v("给定对象")]),t._v("所有"),a("code",[t._v("Symbol")]),t._v("属性的数组")]),t._v(" "),a("li",[a("code",[t._v("for...in")]),t._v("：以任意顺序迭代一个对象的除"),a("code",[t._v("Symbol")]),t._v("以外的可枚举属性，"),a("strong",[t._v("包括继承的可枚举属性")])])]),t._v(" "),a("h2",{attrs:{id:"js中0-正零-0-和负零-0-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中0-正零-0-和负零-0-的区别"}},[t._v("#")]),t._v(" JS中0,正零(+0)和负零(-0)的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("0 === +0 === -0")]),t._v("，三个中两两是严格相等的")]),t._v(" "),a("li",[a("code",[t._v("1/0 === 1/+0 === Infinity")]),t._v("（正的），"),a("code",[t._v("1/-0 === -Infinity")]),t._v("（负的）")])]),t._v(" "),a("h2",{attrs:{id:"object-is-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-is-的区别"}},[t._v("#")]),t._v(' Object.is,"===","=="的区别')]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("JavaScript 中的相等性判断"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("使用"),a("code",[t._v("==")]),t._v("进行相等判断时，如果两边的类型不一致，则会进行强制类型转化后再进行比较。")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("===")]),t._v("进行相等判断时，如果两边的类型不一致时，不会做强制类型准换，直接返回"),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("Object.is")]),t._v("来进行相等判断时，一般情况下和"),a("code",[t._v("===")]),t._v("的判断相同，它处理了一些特殊的情况，比如"),a("code",[t._v("-0")]),t._v("和"),a("code",[t._v("+0")]),t._v("不再相等，两个"),a("code",[t._v("NaN")]),t._v("是相等的。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("除了"),a("code",[t._v("===")]),t._v("之外，数组索引查找方法也使用严格相等，包括"),a("code",[t._v("Array.prototype.indexOf()")]),t._v("、"),a("code",[t._v("Array.prototype.lastIndexOf()")]),t._v("、"),a("code",[t._v("TypedArray.prototype.index()")]),t._v("、"),a("code",[t._v("TypedArray.prototype.lastIndexOf()")]),t._v("和"),a("code",[t._v("case")]),t._v("匹配。这意味着你不能使用"),a("code",[t._v("indexOf(NaN)")]),t._v("查找数组中"),a("code",[t._v("NaN")]),t._v("值的索引，也不能将"),a("code",[t._v("NaN")]),t._v("用作"),a("code",[t._v("case")]),t._v("值在"),a("code",[t._v("switch")]),t._v("语句中匹配任何内容。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Surprise'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有任何输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("同值相等和零值相等")]),t._v(" "),a("ul",[a("li",[t._v("同值相等决定了两个值在所有上下文中是否在功能上相同。同值相等由"),a("code",[t._v("Object.is")]),t._v("方法提供。语言内部期望一个值等于另一个时，几乎所有地方都使用同值相等。")]),t._v(" "),a("li",[t._v("零值相等，类似于同值相等，但"),a("code",[t._v("+0")]),t._v("和"),a("code",[t._v("-0")]),t._v("被视为相等。零值相等不作为JavaScript API公开，但可以通过自定义代码实现：")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameValueZero")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x 和 y 相等（可能是 -0 和 0）或它们都是 NaN")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("零值相等与严格相等的区别在于其将"),a("code",[t._v("NaN")]),t._v("视作是相等的，与同值相等的区别在于其将"),a("code",[t._v("-0")]),t._v("和"),a("code",[t._v("0")]),t._v("视作相等的。这使得它在搜索期间通常具有最实用的行为，特别是在与"),a("code",[t._v("NaN")]),t._v("一起使用时。它被用于"),a("code",[t._v("Array.prototype.includes()")]),t._v("、"),a("code",[t._v("TypedArray.prototype.includes()")]),t._v("及"),a("code",[t._v("Map")]),t._v("和"),a("code",[t._v("Set")]),t._v("方法用来比较键的相等性。")])])}),[],!1,null,null,null);s.default=e.exports}}]);