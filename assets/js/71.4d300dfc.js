(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{608:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIPS")]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("MDN-Array"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"array属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array属性"}},[t._v("#")]),t._v(" Array属性")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.length")])]),t._v(" "),a("p",[a("code",[t._v("Array")]),t._v(" 构造函数的 "),a("code",[t._v("length")]),t._v(" 属性，其值为1（注意该属性为静态属性，不是数组实例的 "),a("code",[t._v("length")]),t._v(" 属性）")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("get Array[@@species]")])]),t._v(" "),a("p",[t._v("返回 Array 构造函数，"),a("code",[t._v("Array[Symbol.species]; // function Array()")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype")])]),t._v(" "),a("p",[t._v("通过数组的原型对象可以为所有数组对象添加属性，"),a("strong",[t._v("鲜为人知的事实："),a("code",[t._v("Array.prototype")]),t._v(" 本身也是一个 "),a("code",[t._v("Array")])])])])]),t._v(" "),a("h2",{attrs:{id:"array方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array方法"}},[t._v("#")]),t._v(" Array方法")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.from()")])]),t._v(" "),a("p",[t._v("从类数组对象或者可迭代对象中创建一个新的数组实例")]),t._v(" "),a("p",[a("code",[t._v("Array.from(arrayLike[, mapFn[, thisArg]])")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.isArray()")])]),t._v(" "),a("p",[t._v("用来判断某个变量是否是一个数组对象")]),t._v(" "),a("p",[a("code",[t._v("Array.isArray(Array.prototype); // true")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.of()")])]),t._v(" "),a("p",[t._v("根据一组参数来创建新的数组实例，支持任意的参数数量和类型。"),a("code",[t._v("Array.of()")]),t._v(" 和 "),a("code",[t._v("Array")]),t._v(" 构造函数之间的区别在于处理整数参数："),a("code",[t._v("Array.of(7)")]),t._v(" 创建一个具有单个元素 7 的数组，而 "),a("code",[t._v("Array(7)")]),t._v(" 创建一个长度为7的空数组（注意：这是指一个有7个空位("),a("code",[t._v("empty")]),t._v(")的数组，而不是由7个 "),a("code",[t._v("undefined")]),t._v(" 组成的数组）")])])]),t._v(" "),a("h2",{attrs:{id:"数组实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组实例属性"}},[t._v("#")]),t._v(" 数组实例属性")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.prototype.constructor")])]),t._v(" "),a("p",[t._v("所有的数组实例都继承了这个属性，它的值就是 "),a("code",[t._v("Array")]),t._v(" ，表明了所有的数组都是由 "),a("code",[t._v("Array")]),t._v(" 构造出来的。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.length")])]),t._v(" "),a("p",[t._v("上面说了，因为 "),a("code",[t._v("Array.prototype")]),t._v(" 也是个数组，所以它也有 "),a("code",[t._v("length")]),t._v(" 属性，这个值为 0，因为它是个空数组")])])]),t._v(" "),a("h2",{attrs:{id:"数组实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组实例方法"}},[t._v("#")]),t._v(" 数组实例方法")]),t._v(" "),a("h3",{attrs:{id:"修改器方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改器方法"}},[t._v("#")]),t._v(" 修改器方法")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("下面的这些方法会改变调用它们的对象自身的值")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.prototype.copyWithin()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：浅复制数组的一部分到同一数组中的另一个位置，覆盖原有的值，并返回它，不会改变原数组的长度。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.copyWithin(target[, start[, end]])")])]),t._v(" "),a("li",[t._v("返回值：改变后的数组。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.fill()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.fill(value[, start[, end]])")])]),t._v(" "),a("li",[t._v("返回值：从数组中删除的元素(当数组为空时返回 "),a("code",[t._v("undefined")]),t._v(" )。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.shift()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：从数组中删除第一个元素，并返回该元素的值。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.shift()")])]),t._v(" "),a("li",[t._v("返回值：从数组中删除的元素; 如果数组为空则返回 "),a("code",[t._v("undefined")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.unshift()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：将一个或多个元素添加到数组的开头，并返回该数组的新长度。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.unshift(element1, ..., elementN)")])]),t._v(" "),a("li",[t._v("返回值：返回其 "),a("code",[t._v("length")]),t._v(" 属性值。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.pop()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：从数组中删除最后一个元素，并返回该元素的值。此方法更改数组的长度。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.pop()")])]),t._v(" "),a("li",[t._v("返回值：改变后的数组。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.push()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：将一个或多个元素添加到数组的末尾，并返回该数组的新长度。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.push(element1, ..., elementN)")])]),t._v(" "),a("li",[t._v("返回值：新的 "),a("code",[t._v("length")]),t._v(" 属性值")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.reverse()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：将数组中元素的位置颠倒，并返回该数组。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.reverse()")])]),t._v(" "),a("li",[t._v("返回值：颠倒后的数组。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.sort()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：用"),a("strong",[t._v("原地算法")]),t._v("对数组的元素进行排序，并返回数组。默认排序顺序是在将元素转换为字符串，然后比较它们的UTF-16代码单元值序列时构建的")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.sort([compareFunction])")])]),t._v(" "),a("li",[t._v("返回值：排序后的数组。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.splice()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：通过删除或替换现有元素或者原地添加新的元素来修改数组,并以数组形式返回被修改的内容。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("array.splice(start[, deleteCount[, item1[, item2[, ...]]]])")])]),t._v(" "),a("li",[t._v("返回值：由被删除的元素组成的一个数组。")])])])]),t._v(" "),a("h3",{attrs:{id:"访问方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问方法"}},[t._v("#")]),t._v(" 访问方法")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("下面的这些方法绝对不会改变调用它们的对象的值，只会返回一个新的数组或者返回一个其它的期望值。")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.prototype.concat()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("var new_array = old_array.concat(value1[, value2[, ...[, valueN]]])")])]),t._v(" "),a("li",[t._v("返回值：新的 "),a("code",[t._v("Array")]),t._v(" 实例。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.includes()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 "),a("code",[t._v("true")]),t._v("，否则返回"),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.includes(valueToFind[, fromIndex])")])]),t._v(" "),a("li",[t._v("返回值：返回一个布尔值 "),a("code",[t._v("Boolean")]),t._v(" ，如果在数组中找到了（如果传入了 "),a("code",[t._v("fromIndex")]),t._v(" ，表示在 "),a("code",[t._v("fromIndex")]),t._v(" 指定的索引范围中找到了）则返回 "),a("code",[t._v("true")]),t._v(" 。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.join()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：将一个数组（或一个类数组对象）的所有元素连接成一个字符串并返回这个字符串。如果数组只有一个项目，那么将返回该项目而不使用分隔符。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.join([separator])")])]),t._v(" "),a("li",[t._v("返回值：一个所有数组元素连接的字符串。如果 "),a("code",[t._v("arr.length")]),t._v(" 为0，则返回空字符串。如果一个元素为 "),a("code",[t._v("undefined")]),t._v(" 或 "),a("code",[t._v("null")]),t._v(" ，它会被转换为空字符串。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.slice()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回一个新的数组对象，这一对象是一个由 "),a("code",[t._v("begin")]),t._v(" 和 "),a("code",[t._v("end")]),t._v(" 决定的原数组的浅拷贝（包括 "),a("code",[t._v("begin")]),t._v("，不包括"),a("code",[t._v("end")]),t._v("）。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.slice([begin[, end]])")])]),t._v(" "),a("li",[t._v("返回值：一个含有被提取元素的新数组。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.toString()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回一个字符串，表示指定的数组及其元素。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.toString()")])]),t._v(" "),a("li",[t._v("返回值：一个表示指定的数组及其元素的字符串，其中包含用逗号分隔的每个数组元素。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.toLocaleString()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回一个字符串表示数组中的元素。数组中的元素将使用各自的 "),a("code",[t._v("toLocaleString")]),t._v(' 方法转成字符串，这些字符串将使用一个特定语言环境的字符串（例如一个逗号 ","）隔开。')]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.toLocaleString([locales[,options]]);")])]),t._v(" "),a("li",[t._v("返回值：表示数组元素的字符串。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.indexOf()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回在数组中可以找到一个给定元素的第一个索引，如果不存在，则返回-1。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.indexOf(searchElement[, fromIndex])")])]),t._v(" "),a("li",[t._v("返回值：首个被找到的元素在数组中的索引位置; 若没有找到则返回 -1")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.lastIndexOf()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回指定元素在数组中的最后一个的索引，如果不存在则返回 -1。从数组的后面向前查找，从 "),a("code",[t._v("fromIndex")]),t._v(" 处开始。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.lastIndexOf(searchElement[, fromIndex])")])]),t._v(" "),a("li",[t._v("返回值：数组中该元素最后一次出现的索引，如未找到返回-1。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.toSource()")]),a("Badge",{attrs:{text:"非标准",type:"warning"}})],1),t._v(" "),a("ul",[a("li",[t._v("描述：返回一个字符串,代表该数组的源代码。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("array.toSource()")])]),t._v(" "),a("li",[t._v("返回值：返回一个字符串。")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIPS")]),t._v(" "),a("p",[t._v("有索引参数方法总结")]),t._v(" "),a("p",[a("code",[t._v("copyWithin")]),t._v(" "),a("code",[t._v("fill")]),t._v(" "),a("code",[t._v("splice")]),t._v(" "),a("code",[t._v("includes")]),t._v(" "),a("code",[t._v("slice")]),t._v(" "),a("code",[t._v("indexOf")]),t._v(" "),a("code",[t._v("lastIndexOf")])]),t._v(" "),a("ol",[a("li",[t._v("如果索引值 index 大于0，没有任何特殊含义，就是指定匹配位置，如果是超出数组长度则表示能匹配到数组的结尾")]),t._v(" "),a("li",[t._v("如果索引值 index 小于0，则表示从数组末位开始的第几位（从-1计数，这意味着-n是倒数第n个元素并且等价于array.length-n）。如果负数的绝对值大于数组的长度，则表示能匹配到数组开始的0位")]),t._v(" "),a("li",[t._v("如果传入的索引是一个区间，start和end，那么能取到的值都是左闭右开的："),a("code",[t._v("[start, end)")]),t._v("，即都是取不到end位处的元素，例如 "),a("code",[t._v("copyWithin")]),t._v(" "),a("code",[t._v("fill")]),t._v(" "),a("code",[t._v("slice")]),t._v("，"),a("code",[t._v("splice")]),t._v(" 不同的是传入的是开始索引和截取元素的个数")])])]),t._v(" "),a("h3",{attrs:{id:"迭代方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代方法"}},[t._v("#")]),t._v(" 迭代方法")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("在每一个数组元素都分别执行完回调函数之前，数组的length属性会被缓存在某个地方，所以，如果你在回调函数中为当前数组添加了新的元素，那么那些新添加的元素是不会被遍历到的。此外，如果在回调函数中对当前数组进行了其它修改，比如改变某个元素的值或者删掉某个元素，那么随后的遍历操作可能会受到未预期的影响。")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.prototype.forEach()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：对数组的每个元素执行一次给定的函数。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.forEach(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),a("li",[t._v("返回值："),a("code",[t._v("undefined")]),t._v("。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.map()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：创建一个新数组，其结果是该数组中的每个元素是调用一次提供的函数后的返回值。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("var newArray = arr.map(callback(element[, index[, array]]){ return element }[, thisArg])")])]),t._v(" "),a("li",[t._v("返回值：一个由原数组每个元素执行回调函数的结果组成的新数组。如果被map调用的数组是离散的，新数组将也是离散的保持相同的索引为空。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.every()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：测试一个数组内的所有元素是否都能通过某个指定函数的测试。它返回一个布尔值。若收到一个空数组，此方法在一切情况下都会返回 true。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.every(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),a("li",[t._v("返回值：如果回调函数的每一次返回都为 "),a("code",[t._v("truthy")]),t._v(" 值，返回 true ，否则返回 false。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.some()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：测试数组中是不是至少有1个元素通过了被提供的函数测试。如果用一个空数组进行测试，在任何情况下它返回的都是false。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.some(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),a("li",[t._v("返回值：数组中有至少一个元素通过回调函数的测试就会返回true；所有元素都没有通过回调函数的测试返回值才会为false。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.filter()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("var newArray = arr.filter(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),a("li",[t._v("返回值：一个新的、由通过测试的元素组成的数组，如果没有任何数组元素通过测试，则返回空数组。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.find()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.find(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),a("li",[t._v("返回值：数组中第一个满足所提供测试函数的元素的值，否则返回 undefined。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.findIndex()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回数组中满足提供的测试函数的第一个元素的索引。若没有找到对应元素则返回-1。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.findIndex(callback(element[, index[, array]])[, thisArg])")])]),t._v(" "),a("li",[t._v("返回值：数组中通过提供测试函数的第一个元素的索引。否则，返回-1")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.reduce()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])")])]),t._v(" "),a("li",[t._v("返回值：函数累计处理的结果")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.reduceRight()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：接受一个函数作为累加器（accumulator）和数组的每个值（从右到左）将其减少为单个值。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.reduceRight(callback(accumulator, currentValue[, index[, array]])[, initialValue])")])]),t._v(" "),a("li",[t._v("返回值：返回一个字符串。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.entries()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回一个新的Array Iterator对象，该对象包含数组中每个索引的键/值对。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.entries()")])]),t._v(" "),a("li",[t._v("返回值：一个新的 Array 迭代器对象。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.keys()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回一个包含数组中每个索引键的Array Iterator对象。索引迭代器会包含那些没有对应元素的索引")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.keys()")])]),t._v(" "),a("li",[t._v("返回值：一个新的 Array 迭代器对象。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.values()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：返回一个新的 Array Iterator 对象，该对象包含数组每个索引的值")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.values()")])]),t._v(" "),a("li",[t._v("返回值：一个新的 Array 迭代对象。")]),t._v(" "),a("li",[t._v("Array.prototype.values 是 Array.prototype[Symbol.iterator] 的默认实现。")]),t._v(" "),a("li",[a("code",[t._v("Array.prototype.values === Array.prototype[Symbol.iterator] // true")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype[@@iterator]()")])]),t._v(" "),a("ul",[a("li",[t._v("描述："),a("code",[t._v("@@iterator")]),t._v(" 属性和 "),a("code",[t._v("Array.prototype.values()")]),t._v(" 属性的初始值是同一个函数对象。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr[Symbol.iterator]()")])]),t._v(" "),a("li",[t._v("返回值：数组的 iterator 方法，默认情况下，与 values() 返回值相同， arr[Symbol.iterator] 则会返回 values() 函数。")])])])]),t._v(" "),a("h3",{attrs:{id:"迭代方法小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代方法小结"}},[t._v("#")]),t._v(" 迭代方法小结")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("forEach")]),t._v(" "),a("code",[t._v("every")]),t._v(" "),a("code",[t._v("some")]),t._v(" "),a("code",[t._v("filter")]),t._v(" "),a("code",[t._v("find")]),t._v(" "),a("code",[t._v("findIndex")]),t._v(" "),a("code",[t._v("map")]),t._v(" 接收的 callback 参数都是一样 "),a("code",[t._v("callback(element[, index[, array]]")]),t._v("，并且第二个参数都是执行回调时用作this的对象 "),a("code",[t._v("thisArg")]),t._v("， "),a("code",[t._v("reduce")]),t._v(" 和 "),a("code",[t._v("reduceRight")]),t._v(" 参数是一样的，一个 "),a("code",[t._v("reducer")]),t._v(" 函数和一个初始值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("thisArg")]),t._v(" 参数（this），每次调用时，它都被传给 callback 函数，作为它的 this 值。注意：如果使用箭头函数表达式来传入函数参数， "),a("code",[t._v("thisArg")]),t._v(" 参数会被忽略，因为箭头函数在词法上绑定了 "),a("code",[t._v("this")]),t._v(" 值")])]),t._v(" "),a("li",[a("p",[t._v("所有的迭代方法都不会直接改变调用它的对象，但是那个对象可能会被 "),a("code",[t._v("callback")]),t._v(" 函数改变。")]),t._v(" "),a("blockquote",[a("p",[t._v("EMCA语言规范：'forEach does not directly mutate the object on which it is called but the object may be mutated by the calls to callbackfn.'")])])]),t._v(" "),a("li",[a("p",[t._v("对于 "),a("code",[t._v("find")]),t._v(" 和 "),a("code",[t._v("findIndex")]),t._v("， "),a("code",[t._v("callback")]),t._v(" 函数会为数组中的每个索引调用即从 0 到 length - 1，而不仅仅是那些被赋值的索引，这意味着对于稀疏数组来说，该方法的效率要低于那些只遍历有值的索引的方法。除开这两个之外的迭代方法在执行 "),a("code",[t._v("callback")]),t._v(" 时都会跳过未被赋值的索引（直接修改索引操作造成的empty值或者使用delete删除的值）。对于 "),a("code",[t._v("map")]),t._v(" ，虽然会跳过未被赋值的索引，但是最后得到的结果数组依旧保持了原有的未被赋值的索引")])])]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.prototype.at()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：接受整数值并返回该索引处的项，允许正整数和负整数。负整数从数组中的最后一项开始倒数")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("arr.at(index)")])]),t._v(" "),a("li",[t._v("返回值：该索引处的项。"),a("code",[t._v("[1, 2, 3].at(-1); // 3")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.flat()")])]),t._v(" "),a("ul",[a("li",[t._v("描述：按照一个可指定的深度(默认值为 1)递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("var newArray = arr.flat([depth])")])]),t._v(" "),a("li",[t._v("返回值：一个包含将数组与子数组中所有元素的新数组。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.prototype.flatMap()")])]),t._v(" "),a("ul",[a("li",[t._v("描述："),a("code",[t._v("flatMap()")]),t._v(" 方法首先使用映射函数映射每个元素，然后将结果压缩成一个新数组。"),a("code",[t._v("flatMap")]),t._v(" 方法与 "),a("code",[t._v("map")]),t._v(" 方法和深度depth为1的 "),a("code",[t._v("flat")]),t._v(" 几乎相同，但 "),a("code",[t._v("flatMap")]),t._v(" 通常在合并成一种方法的效率稍微高一些。")]),t._v(" "),a("li",[t._v("语法："),a("code",[t._v("var new_array = arr.flatMap(function callback(currentValue[, index[, array]]) { // return element for new_array}[, thisArg])")])]),t._v(" "),a("li",[t._v("返回值：一个新的数组，其中每个元素都是回调函数的结果，并且结构深度 depth 值为1。")])])])]),t._v(" "),a("h2",{attrs:{id:"手动实现部分方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动实现部分方法"}},[t._v("#")]),t._v(" 手动实现部分方法")]),t._v(" "),a("h3",{attrs:{id:"foreach"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[t._v("#")]),t._v(" forEach")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("forEach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("forEach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisArg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is null or not defined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" is not a function")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抽象操作ToObject将其参数转换为Object类型的值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 个人目前发现是可以防止其他非对象值在后面使用in时报错")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是不清楚真正目的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// O.length >>> 0 无符号右移 0 位，保证转换后的值为正整数。其实底层做了 2 层转换，")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一是非 number 转成 number 类型，第二是将 number 转成 Uint32 类型。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 in 来判断索引 确保能够跳过那些empty的位")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// thisArg 没传就是 undefined")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return undefined")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br")])]),a("h3",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" map")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("map")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisArg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is null or not defined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" is not a function")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抽象操作ToObject将其参数转换为Object类型的值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// O.length >>> 0 无符号右移 0 位，保证转换后的值为正整数。其实底层做了 2 层转换，")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一是非 number 转成 number 类型，第二是将 number 转成 Uint32 类型。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样保证了原来是empty的位，map后还是empty")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mapResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        mapResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mapResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br")])]),a("h3",{attrs:{id:"reduce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reduce"}},[t._v("#")]),t._v(" reduce")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// redecuRight 原理差不多只是遍历索引从右往左")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reduce"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reduce")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is null or not defined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" is not a function")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抽象操作ToObject将其参数转换为Object类型的值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// O.length >>> 0 无符号右移 0 位，保证转换后的值为正整数。其实底层做了 2 层转换，")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一是非 number 转成 number 类型，第二是将 number 转成 Uint32 类型。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传了初始值")]),t._v("\n      value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initialValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找到一个非empty的有效值")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Reduce of empty array with no initial value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用了数组中的一个初始值 那么累加的从下一个开始")]),t._v("\n      k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br")])]),a("h3",{attrs:{id:"flat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flat"}},[t._v("#")]),t._v(" flat")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("flat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("depth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is null or not defined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓存递归结果")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始递归")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _depth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// forEach 遍历数组会自动跳过空元素")]),t._v("\n      _arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 控制递归深度")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" _depth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归数组")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _depth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓存元素")]),t._v("\n          result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" depth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回递归结果")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function flatten(arr) {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   while (arr.some((item) => Array.isArray(item))) {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     arr = [].concat(...arr);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     // concat接收的值可以是数组/值，如果是数据类型如字符串，数字和布尔")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     // concat将字符串和数字的值复制到新数组中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   return arr;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);