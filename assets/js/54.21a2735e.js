(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{592:function(v,_,e){"use strict";e.r(_);var o=e(6),t=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"为什么要进行url编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进行url编码"}},[v._v("#")]),v._v(" 为什么要进行URL编码")]),v._v(" "),e("p",[v._v("更详细的参考："),e("a",{attrs:{href:"https://www.cnblogs.com/jerrysion/p/5522673.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[v._v("为什么要进行URL编码"),e("OutboundLink")],1)]),v._v(" "),e("p",[v._v("Http协议中参数的传输是"),e("code",[v._v("key=value")]),v._v("键值对形式的，如果要传多个参数就需要用"),e("code",[v._v("&")]),v._v("符号对键值对进行分割。如"),e("code",[v._v("?name1=value1&name2=value2")]),v._v("，这样在服务端在收到这种字符串的时候，会用"),e("code",[v._v("&")]),v._v("分割出每一个参数，然后再用"),e("code",[v._v("=")]),v._v("来分割出参数值。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIPS")]),v._v(" "),e("ul",[e("li",[v._v("RFC3986文档规定，URL中只允许包含英文字母"),e("code",[v._v("a-zA-Z")]),v._v("、数字"),e("code",[v._v("0-9")]),v._v("、"),e("code",[v._v("-_.~")]),v._v("4个特殊字符以及所有保留字符。")]),v._v(" "),e("li",[v._v("RFC3986中指定了以下字符为保留字符："),e("code",[v._v("!")]),v._v("、"),e("code",[v._v("*")]),v._v("、"),e("code",[v._v("'")]),v._v("、"),e("code",[v._v("(")]),v._v("、"),e("code",[v._v(")")]),v._v("、"),e("code",[v._v(";")]),v._v("、"),e("code",[v._v(":")]),v._v("、"),e("code",[v._v("@")]),v._v("、"),e("code",[v._v("&")]),v._v("、"),e("code",[v._v("=")]),v._v("、"),e("code",[v._v("+")]),v._v("、"),e("code",[v._v("$")]),v._v("、"),e("code",[v._v(",")]),v._v("、"),e("code",[v._v("/")]),v._v("、"),e("code",[v._v("?")]),v._v("、"),e("code",[v._v("#")]),v._v("、"),e("code",[v._v("[")]),v._v("、"),e("code",[v._v("]")]),v._v("。")]),v._v(" "),e("li",[v._v("比较常见的其他禁止使用的包括百分号、引号、空格、尖括号（<>）等。")])])]),v._v(" "),e("p",[v._v("但是如果我的参数值中就包含"),e("code",[v._v("=")]),v._v("或"),e("code",[v._v("&")]),v._v("这种特殊字符的时候该怎么办？")]),v._v(" "),e("p",[v._v("比如说"),e("code",[v._v("name1=value1")]),v._v("，其中"),e("code",[v._v("value1")]),v._v("的值是"),e("code",[v._v("va&lu=e1")]),v._v("字符串，那么实际在传输过程中就会变成这样"),e("code",[v._v("name1=va&lu=e1")]),v._v("。")]),v._v(" "),e("p",[v._v("解决的办法就是对参数进行URL编码：")]),v._v(" "),e("p",[v._v("URL编码通常也被称为百分号编码（URL Encoding，also known as percent-encoding），只是简单的在特殊字符的各个字节前加上"),e("code",[v._v("%")])]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("WARNING")]),v._v(" "),e("p",[v._v("这里并不会简单的像有些文章那样说的会智能的编码成"),e("code",[v._v("name1=va%26lu%3De1")]),v._v("，这个在浏览器地址栏里面都不会编码，就是变成了两个参数，传到后端接收的也是两个参数。解决办法就是自己手动去拼接URL，借助其他工具函数来手动把参数编码然后拼接起来，比如"),e("code",[v._v("encodeURIComponent")]),v._v("。")]),v._v(" "),e("p",[v._v("平时开发中也是这样，前端封装的请求就会去把参数编码然后再传给后端，如使用qs库。")])]),v._v(" "),e("h2",{attrs:{id:"url编码的规则是什么-为什么要用这个"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#url编码的规则是什么-为什么要用这个"}},[v._v("#")]),v._v(" URL编码的规则是什么，为什么要用这个")]),v._v(" "),e("ul",[e("li",[v._v("网址路径的编码，用的是UTF-8编码。")]),v._v(" "),e("li",[v._v("URL中查询字符串的编码，用的是操作系统的默认编码。")]),v._v(" "),e("li",[v._v("GET和POST方法的编码，用的是网页的编码。"),e("code",[v._v('<meta http-equiv="Content-Type" content="text/html;charset=xxxx">')])]),v._v(" "),e("li",[v._v("网页里的form编码不完全取决于网页编码，form标记中有一个"),e("code",[v._v("accept-charset")]),v._v("属性，在非ie浏览器中，如果将其赋值（比如"),e("code",[v._v('accept-charset="UTF-8"')]),v._v("），则表单会按照这个值表示的编码方式进行提交。")])]),v._v(" "),e("p",[v._v("对于非ASCII字符，需要使用ASCII字符集的超集进行编码得到相应的字节，然后对每个字节执行百分号编码。对于Unicode字符，RFC文档建议使用UTF-8对其进行编码得到相应的字节，然后对每个字节执行百分号编码。如"),e("code",[v._v("中文")]),v._v("使用UTF-8字符集得到的字节为"),e("code",[v._v("0xE4 0xB8 0xAD 0xE6 0x96 0x87")]),v._v("，经过URL编码之后得到"),e("code",[v._v("%E4%B8%AD%E6%96%87")]),v._v("。")]),v._v(" "),e("p",[v._v("如果某个字节对应着ASCII字符集中的某个非保留字符，则此字节无需使用百分号表示。")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("为什么用UTF-8？")]),v._v(" "),e("p",[v._v("参考："),e("a",{attrs:{href:"https://www.zhihu.com/question/34499172",target:"_blank",rel:"nofollow noopener noreferrer"}},[v._v("为什么要有UTF-8的疑问?"),e("OutboundLink")],1)]),v._v(" "),e("ol",[e("li",[v._v("UTF-8是Unicode编码的实现方式之一，在Unicode标准中，我们目前使用的是UCS-4，即字符集中每一个字符的字符代码都是用4个字节来表示，其中字符代码0~127兼容ASCII字符集，一般的通用汉字的字符代码也都集中在65535之前，使用大于65535的字符代码，即需要超过两个字节来表示的字符代码是比较少的。因此，如果仍然依旧采用字符代码和字符编码相一致的编码方式，那么拉丁字母原本仅需一个字节编码，目前就需要4个字节进行编码，汉字原本仅需两个字节进行编码，目前也需要4个字节进行编码，这对于存储或传输资源而言是很不划算的。因此就需要在字符代码和字符编码间进行再编码，这样就引出了UTF-8、UTF-16等编码方式。基于上述需求，UTF-8就是针对位于不同范围的字符代码转化成不同长度的字符编码，同时这种编码方式是以字节为单位，并且完全兼容ASCII编码，即0X00-0X7F的字符代码和字符编码完全一致，也是用一个字节来编码ASCII字符集，而常用汉字在Unicode中的字符代码是4E00-9FA5，在文末的对应关系中我们看到是用三个字节来进行汉字字符的编码（拉丁文：扩展B 0180-024F 以后的占4个字节）。UTF-16同理，就是以16位二进制数为基本单位对Unicode字符集中的字符代码进行再编码，原理和UTF-8一致。因此，我们可以看出，在目前全球互联的大背景下，Unicode字符集和编码方式解决了跨语言、跨平台的交流问题，同时UTF-8等编码方式又有效的节约了存储空间和传输带宽，因而受到了极大的推广应用。")]),v._v(" "),e("li",[v._v("根据UTF-8的编码规则，从UTF-8字节流任何一个地方截断都可以跳过非法的部分找到下一个字的开头，如果是unicode如果从一个字的中间截断会导致接下来所有的字符解析都是错的，这在不够可靠的网络传输中是有利的。")]),v._v(" "),e("li",[v._v("现有的unicode标准不是用2个字节而是3个字节（最大21位）。而UTF-8则是变长的，对于英文字符，一个字节就够了，而网络上传输的大部分为英文字符，所以UTF-8更节省存储空间和宽带。")])]),v._v(" "),e("p",[v._v("Unicode字符代码与UTF-8编码的对应关系：")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("Unicode字符代码")]),v._v(" "),e("th",[v._v("UTF-8编码")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("0000 0000-0000 007F")]),v._v(" "),e("td",[v._v("0xxxxxxx")])]),v._v(" "),e("tr",[e("td",[v._v("0000 0080-0000 07FF")]),v._v(" "),e("td",[v._v("110xxxxx 10xxxxxx")])]),v._v(" "),e("tr",[e("td",[v._v("0000 0800-0000 FFFF")]),v._v(" "),e("td",[v._v("1110xxxx 10xxxxxx 10xxxxxx")])]),v._v(" "),e("tr",[e("td",[v._v("0001 0000-0010 FFFF")]),v._v(" "),e("td",[v._v("11110xxx 10xxxxxx 10xxxxxx 10xxxxxx")])])])]),v._v(" "),e("ul",[e("li",[v._v("对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。")]),v._v(" "),e("li",[v._v("对于n字节的符号（n>1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的unicode码。")])])])}),[],!1,null,null,null);_.default=t.exports}}]);