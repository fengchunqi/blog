(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{575:function(_,v,e){"use strict";e.r(v);var t=e(6),o=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("p",[_._v("文章来源："),e("a",{attrs:{href:"https://mp.weixin.qq.com/s/UtBO1pLJ9JqVmjEsNQMtlg",target:"_blank",rel:"nofollow noopener noreferrer"}},[_._v("面试官：说说Git中 fork, clone,branch这三个概念，有什么区别?"),e("OutboundLink")],1)]),_._v(" "),e("h2",{attrs:{id:"fork"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fork"}},[_._v("#")]),_._v(" fork")]),_._v(" "),e("p",[e("code",[_._v("fork")]),_._v("，英语翻译过来就是叉子，动词形式则是分叉，转到"),e("code",[_._v("git")]),_._v("仓库中，"),e("code",[_._v("fork")]),_._v("则可以代表分叉、克隆出一个（仓库的）新拷贝")]),_._v(" "),e("p",[_._v("包含了原来的仓库（即upstream repository，上游仓库）所有内容，如分支、Tag、提交")]),_._v(" "),e("p",[_._v("如果想将你的修改合并到原项目中时，可以通过的 Pull Request 把你的提交贡献回原仓库")]),_._v(" "),e("h2",{attrs:{id:"clone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone"}},[_._v("#")]),_._v(" clone")]),_._v(" "),e("p",[e("code",[_._v("clone")]),_._v("，译为克隆，它的作用是将文件从远程代码仓下载到本地，从而形成一个本地代码仓")]),_._v(" "),e("p",[_._v("执行"),e("code",[_._v("clone")]),_._v("命令后，会在当前目录下创建一个名为xxx的目录，并在这个目录下初始化一个 "),e("code",[_._v(".git")]),_._v(" 文件夹，然后从中读取最新版本的文件的拷贝")]),_._v(" "),e("p",[_._v("默认配置下远程 "),e("code",[_._v("Git")]),_._v(" 仓库中的每一个文件的每一个版本都将被拉取下来")]),_._v(" "),e("h2",{attrs:{id:"branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#branch"}},[_._v("#")]),_._v(" branch")]),_._v(" "),e("p",[e("code",[_._v("branch")]),_._v("，译为分支，其作用简单而言就是开启另一个分支， 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线")]),_._v(" "),e("p",[e("code",[_._v("Git")]),_._v(" 处理分支的方式十分轻量，创建新分支这一操作几乎能在瞬间完成，并且在不同分支之间的切换操作也是一样便捷")]),_._v(" "),e("h2",{attrs:{id:"如何使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[_._v("#")]),_._v(" 如何使用")]),_._v(" "),e("p",[e("code",[_._v("fork")])]),_._v(" "),e("p",[_._v("当你在github发现感兴趣开源项目的时候，可以通过点击github仓库中右上角"),e("code",[_._v("fork")]),_._v("标识的按钮，点击这个操作后会将这个仓库的文件、提交历史、issues和其余东西的仓库复制到自己的github仓库中，而你本地仓库是不会存在任何更改")]),_._v(" "),e("p",[_._v("然后你就可以通过git "),e("code",[_._v("clone")]),_._v("对你这个复制的远程仓库进行克隆")]),_._v(" "),e("p",[_._v("后续更改任何东西都可以在本地完成，如"),e("code",[_._v("git add")]),_._v("、"),e("code",[_._v("git commit")]),_._v("一系列的操作，然后通过"),e("code",[_._v("push")]),_._v("命令推到自己的远程仓库")]),_._v(" "),e("p",[_._v("如果希望对方接受你的修改，可以通过发送pull requests给对方，如果对方接受。则会将你的修改内容更新到仓库中")]),_._v(" "),e("p",[e("code",[_._v("clone")])]),_._v(" "),e("p",[_._v("在github中，开源项目右侧存在code按钮，点击后则会显示开源项目url信息，通过"),e("code",[_._v("git clone xxx")]),_._v("则能完成远程项目的下载")]),_._v(" "),e("p",[e("code",[_._v("branch")])]),_._v(" "),e("p",[_._v("可通过"),e("code",[_._v("git branch")]),_._v("进行查看当前的分支状态，")]),_._v(" "),e("p",[_._v("如果给了--list，或者没有非选项参数，现有的分支将被列出；当前的分支将以绿色突出显示，并标有星号")]),_._v(" "),e("p",[_._v("以及通过"),e("code",[_._v("git branch")]),_._v("创建一个新的分支出来")]),_._v(" "),e("h2",{attrs:{id:"区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[_._v("#")]),_._v(" 区别")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("fork")]),_._v(" 只能对代码仓进行操作，且 "),e("code",[_._v("fork")]),_._v(" 不属于 "),e("code",[_._v("git")]),_._v(" 的命令，通常用于代码仓托管平台的一种“操作”")]),_._v(" "),e("li",[e("code",[_._v("clone")]),_._v(" 是 "),e("code",[_._v("git")]),_._v(" 的一种命令，它的作用是将文件从远程代码仓下载到本地，从而形成一个本地代码仓")]),_._v(" "),e("li",[e("code",[_._v("branch")]),_._v(" 特征与 "),e("code",[_._v("fork")]),_._v(" 很类似，"),e("code",[_._v("fork")]),_._v(" 得到的是一个新的、自己的代码仓，而 "),e("code",[_._v("branch")]),_._v(" 得到的是一个代码仓的一个新分支")])])])}),[],!1,null,null,null);v.default=o.exports}}]);